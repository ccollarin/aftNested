{
    "type": [
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        0,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        2,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        2,
        0,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        1,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "    outer \n0.5484164 \n",
        "Browse[1]> ",
        "init.par",
        " [1] -0.845927488 -1.635807580  0.924443856 -0.417964307 -0.038956331\n [6]  0.011076657 -0.061286836  2.872209176  0.177041643  1.589327596\n[11]  0.203382382 -1.371907069  0.009229957 -4.463566497  0.329117618\n[16]  0.028924726  0.057850022  0.086773909  0.115691537  0.144604613\n[21]  0.173372135  0.198091976  0.195766424  0.121197580 -0.020617390\n[26] -0.149470385 -0.217421613 -0.238258177 -0.241075717 -0.241159661\n[31] -0.241178036 -0.241191153 -0.241201060 -0.241203221\n",
        "Browse[1]> ",
        "debug(lopt)",
        "Browse[1]> ",
        "debugging in: fn(par, ...)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#12: {\n    llk <- llk_afc(eff, sm = sm, delta = delta, vpen = vpen, \n        mpen = mpen, lambda = lambda, ...)\n    llk.val <- llk_afc(eff.val, sm = sm, delta = delta.val, mpen = mpen, \n        vpen = vpen, lambda = lambda, ...)\n    out <- nlm(f = llk, p = env$coef, iterlim = 10000)\n    out$lambda <- lambda\n    sm$coefficients <- out$coefficients <- out$estimate\n    out$estimate <- ",
        "NULL\n    sm$xt$si$alpha <- out$coefficients[1:length(sm$xt$si$alpha)]\n    out$smooth <- sm\n    out$formula <- formula\n    env$coef <- out$coefficients\n    env$out <- out\n    loss <- gcv.aft_nl(out, llk.val, kde = eff$eval(sm$coefficients)$kde)\n    attr(loss, \"gradient\") <- attr(loss, \"hessian\") <- NULL\n    if (trace) {\n        cat(paste0(\"iter = \", out$iterations, \"\\nGCV: \", loss, \n            \"  ||   llk = \", env$out$minimum, \"\\nlambda = \", \n            paste(lambda, collapse = \"\\t \"), \"\\n\\n\"))\n    }\n    r",
        "eturn(loss)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#14: llk <- llk_afc(eff, sm = sm, delta = delta, vpen = vpen, mpen = mpen, \n    lambda = lambda, ...)\n",
        "Browse[1]> ",
        "env$coef",
        " [1] -0.845927488 -1.635807580  0.924443856 -0.417964307 -0.038956331\n [6]  0.011076657 -0.061286836  2.872209176  0.177041643  1.589327596\n[11]  0.203382382 -1.371907069  0.009229957 -4.463566497  0.329117618\n[16]  0.028924726  0.057850022  0.086773909  0.115691537  0.144604613\n[21]  0.173372135  0.198091976  0.195766424  0.121197580 -0.020617390\n[26] -0.149470385 -0.217421613 -0.238258177 -0.241075717 -0.241159661\n[31] -0.241178036 -0.241191153 -0.241201060 -0.241203221\n",
        "Browse[1]> ",
        "lambda",
        "    outer \n0.5484164 \n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#16: llk.val <- llk_afc(eff.val, sm = sm, delta = delta.val, mpen = mpen, \n    vpen = vpen, lambda = lambda, ...)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#19: out <- nlm(f = llk, p = env$coef, iterlim = 10000)\n",
        "Browse[1]> ",
        "debug(llk)",
        "Browse[1]> ",
        "debugging in: f(x, ...)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#41: {\n    if (is.list(param)) \n        param <- do.call(\"cbind\", param)\n    if (is.vector(param)) \n        param <- matrix(param, ncol = 1)\n    obj <- tryCatch(obj$eval(param = param, deriv = deriv + 1, \n        kde), warning = function(war) {\n        print(param)\n    })\n    ltx <- tryCatch(log.htx(obj, deriv = deriv, delta = delta), \n        warning = function(war) {\n            print(par",
        "am)\n        })\n    stx <- tryCatch(log.Stx(obj, deriv = deriv), warning = function(war) {\n        print(param)\n    })\n    llk <- sum(ltx$h) + sum(stx$s)\n    loss_d1 <- loss_d2 <- NULL\n    na <- obj$na\n    Spen <- Reduce(\"+\", lapply(1:length(sm$S), function(ii) lambda[ii] * \n        sm$S[[ii]]))\n    pen <- pen_var_si(o = obj, v = 1, deriv = deriv)\n    pen_m <- pen_mean_logS(sm = sm, coefs = param, deriv = deriv)\n    loss <- drop(-llk + vpen * pen$d0 + t(param) %*% Spen %*% \n        param) + mpen * pen_m$d0\n ",
        "   print(loss)\n    if (deriv > 0) {\n        d1 <- c(ltx$dhda + stx$dhda, ltx$dhdb + stx$dhdb)\n        loss_d1 <- -d1 + 2 * Spen %*% param + mpen * pen_m$d1\n        loss_d1[1:na] <- loss_d1[1:na] + vpen * pen$d1\n        if (deriv > 1) {\n            d2 <- ltx$dhab + stx$dhab\n            loss_d2 <- -d2 + 2 * Spen + mpen * pen_m$d2\n            loss_d2[1:na, 1:na] <- loss_d2[1:na, 1:na] + vpen * \n                pen$d2\n        }\n    }\n    return(structure(loss, gradient = loss_d1, hessian = loss_d2))\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#43: if (is.list(param)) param <- do.call(\"cbind\", param)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#44: if (is.vector(param)) param <- matrix(param, ncol = 1)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#44: param <- matrix(param, ncol = 1)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#46: obj <- tryCatch(obj$eval(param = param, deriv = deriv + 1, kde), \n    warning = function(war) {\n        print(param)\n    })\n",
        "Browse[1]> ",
        "debug(obj$eval)",
        "Browse[1]> ",
        "debugging in: obj$eval(param = param, deriv = deriv + 1, kde)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#16: {\n    na <- ncol(Xi)\n    nb <- length(param) - na\n    alpha <- param[1:na]\n    alpha[1] <- exp(alpha[1])\n    alpha[-1] <- -alpha[-1]\n    beta <- param[-(1:na)]\n    if (basis$drop.coef) {\n        betat <- exp(beta)\n    }\n    else {\n        betat <- c(beta[1], exp(beta[-1]))\n    }\n    if (is.null(a0)) {\n        a0 <- alpha * 0\n    }\n    ax1 <- drop(",
        "Xi %*% (alpha + a0))\n    if (unif & is.null(kde)) {\n        if (kernel == \"gaussian\") {\n            ss <- seq(1, nrow(Xi), length.out = min(nrow(Xi), \n                100))\n            kde <- .ckde(ax1[ss], h = (4/(3 * nrow(Xi[ss, ])))^(1/5), \n                Xi_fix = Xi[ss, ], kernel = \"gauss\")\n        }\n        if (kernel == \"triweight\") {\n            kde <- .ckde(ax1, h = (4/(3 * nrow(Xi)))^(1/5), Xi_fix = Xi, \n                kernel = \"tri\")\n        }\n        ax <- kde(ax1, Xi = Xi, deriv = deriv)\n    }",
        "\n    else if (unif & !is.null(kde)) {\n        ax <- kde(ax1, Xi = Xi, deriv = deriv)\n    }\n    else {\n        ax <- list(d0 = ax1, d1 = Xi)\n    }\n    store <- basis$evalX(x = ax$d0, deriv = deriv)\n    store$Xi <- Xi\n    store$g1 <- c(alpha[1], rep(-1, na - 1))\n    if (deriv >= 1) {\n        if (basis$drop.coef) {\n            btb <- betat\n        }\n        else {\n            btb <- c(1, betat[-1])\n        }\n        store$f1 <- drop(store$X1 %*% betat)\n        store$u1 <- ax$d1\n        store$fb <- sweep(store$",
        "X0, 2, btb, FUN = \"*\")\n        store$f1b <- sweep(store$X1, 2, btb, FUN = \"*\")\n        if (deriv >= 2) {\n            store$f2 <- drop(store$X2 %*% betat)\n            store$fbb <- store$fb[, -1]\n            store$u2 <- ax$d2\n            if (deriv >= 3) {\n                store$f3 <- drop(store$X3 %*% betat)\n                store$g3 <- store$g2\n            }\n        }\n    }\n    o <- eff_misi(Xi = Xi, basis = basis)\n    o$f <- drop(store$X0 %*% betat)\n    o$ax <- ax$d0\n    o$param <- param\n    o$a0 <- a0\n    o$",
        "na <- na\n    o$store <- store\n    o$deriv <- deriv\n    o$kde <- kde\n    o$drop.coef <- basis$drop.coef\n    return(o)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#17: na <- ncol(Xi)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#18: nb <- length(param) - na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#21: alpha <- param[1:na]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#22: alpha[1] <- exp(alpha[1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#23: alpha[-1] <- -alpha[-1]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#24: beta <- param[-(1:na)]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#25: if (basis$drop.coef) {\n    betat <- exp(beta)\n} else {\n    betat <- c(beta[1], exp(beta[-1]))\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#25: betat <- exp(beta)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#28: if (is.null(a0)) {\n    a0 <- alpha * 0\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#29: a0 <- alpha * 0\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#33: ax1 <- drop(Xi %*% (alpha + a0))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#34: if (unif & is.null(kde)) {\n    if (kernel == \"gaussian\") {\n        ss <- seq(1, nrow(Xi), length.out = min(nrow(Xi), 100))\n        kde <- .ckde(ax1[ss], h = (4/(3 * nrow(Xi[ss, ])))^(1/5), \n            Xi_fix = Xi[ss, ], kernel = \"gauss\")\n    }\n    if (kernel == \"triweight\") {\n        kde <- .ckde(ax1, h = (4/(3 * nrow(Xi)))^(1/5), Xi_fix = Xi, \n            kernel = \"tri\")\n    }\n    ax <- kde(ax1, Xi = Xi, d",
        "eriv = deriv)\n} else if (unif & !is.null(kde)) {\n    ax <- kde(ax1, Xi = Xi, deriv = deriv)\n} else {\n    ax <- list(d0 = ax1, d1 = Xi)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#34: if (unif & !is.null(kde)) {\n    ax <- kde(ax1, Xi = Xi, deriv = deriv)\n} else {\n    ax <- list(d0 = ax1, d1 = Xi)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#46: ax <- list(d0 = ax1, d1 = Xi)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#50: store <- basis$evalX(x = ax$d0, deriv = deriv)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#51: store$Xi <- Xi\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#52: store$g1 <- c(alpha[1], rep(-1, na - 1))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#53: if (deriv >= 1) {\n    if (basis$drop.coef) {\n        btb <- betat\n    }\n    else {\n        btb <- c(1, betat[-1])\n    }\n    store$f1 <- drop(store$X1 %*% betat)\n    store$u1 <- ax$d1\n    store$fb <- sweep(store$X0, 2, btb, FUN = \"*\")\n    store$f1b <- sweep(store$X1, 2, btb, FUN = \"*\")\n    if (deriv >= 2) {\n        store$f2 <- drop(store$X2 %*% betat)\n        store$fbb <- store$fb[, -1]\n        store$u2 <- ax",
        "$d2\n        if (deriv >= 3) {\n            store$f3 <- drop(store$X3 %*% betat)\n            store$g3 <- store$g2\n        }\n    }\n}\n",
        "Browse[1]> ",
        "plot(store$X0 %*% betat~ax)",
        "Errore in (function (formula, data = NULL, subset = NULL, na.action, drop.unused.levels = FALSE,  : \n  tipo non valido (list) per la variabile 'ax'\n",
        "Browse[1]> ",
        "plot(store$X0 %*% betat~ax1)",
        "Browse[1]> ",
        "colMeans(store$X0)",
        " [1] 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 9.999696e-01\n [6] 9.989073e-01 9.883105e-01 9.299050e-01 7.579029e-01 4.814671e-01\n[11] 2.316741e-01 8.641589e-02 2.251891e-02 2.855633e-03 7.308084e-05\n[16] 6.419985e-09 0.000000e+00 0.000000e+00 0.000000e+00\n",
        "Browse[1]> ",
        "Q",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "Errore in .wrap_nested_basis(b = basis, P = NS %*% Sigma, Xth = Xth, drop.coef = out$drop.coef,  : \n  argomento non utilizzato (xm = out$xm)\n",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n",
        "> ",
        "debug(aft_nl)",
        "> ",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "debugging in: aft_nl(times ~ s(x1, k = 10) + x2.1 + x2.2 + x2.3 + x2.4 + x2.5, \n    outer.args = list(k = 20), data = dat, val = validation, \n    censored = \"c\", trace = TRUE, ps = FALSE)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#10: {\n    dat <- .prep.df(formula, data, val, censored, m = outer.args$m, \n        k = outer.args$k, pspline = ps)\n    form_comp <- .compile_formula(dat$formula)\n    sm <- aftNested:::smooth.construct.misi.smooth.spec(object = fo",
        "rm_comp, \n        data = dat$X, knots = list(), ...)\n    eff <- eff_misi(sm$xt$si$X, basis = sm$xt$basis)\n    lambda <- initial.lambda(sm)\n    init.par <- initialize.coef(sm, lambda[1])\n    out_env <- new.env()\n    lopt <- lambda.optim(eff, sm, delta = data[[censored]], vpen = 10000, \n        mpen = 10000, out_env, val = dat$val, delta.val = dat$val[[censored]], \n        init.par = init.par, trace = trace)\n    out_l <- optim(par = lambda, fn = lopt, lower = min.lambda, \n        method = \"L-BFGS-B\")\n    out ",
        "<- out_env$out\n    out$lambda <- out_l$par\n    out$gcv <- out_l$value\n    out$convergence <- out_l$convergence\n    out$iterations <- out_l$counts\n    class(out) <- c(\"aftnl\", class(out))\n    return(out)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#13: dat <- .prep.df(formula, data, val, censored, m = outer.args$m, \n    k = outer.args$k, pspline = ps)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#15: form_comp <- .compile_formula(dat$formula)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#17: sm <- aftNested:::smooth.construct.misi.smooth.spec(object = form_comp, \n    data = dat$X, knots = list(), ...)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#19: eff <- eff_misi(sm$xt$si$X, basis = sm$xt$basis)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#21: lambda <- initial.lambda(sm)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#22: init.par <- initialize.coef(sm, lambda[1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#23: out_env <- new.env()\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#24: lopt <- lambda.optim(eff, sm, delta = data[[censored]], vpen = 10000, \n    mpen = 10000, out_env, val = dat$val, delta.val = dat$val[[censored]], \n    init.par = init.par, trace = trace)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#27: out_l <- optim(par = lambda, fn = lopt, lower = min.lambda, method = \"L-BFGS-B\")\n",
        "Browse[1]> ",
        "debug(lopt)",
        "Browse[1]> ",
        "debugging in: fn(par, ...)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#12: {\n    llk <- llk_afc(eff, sm = sm, delta = delta, vpen = vpen, \n        mpen = mpen, lambda = lambda, ...)\n    llk.val <- llk_afc(eff.val, sm = sm, delta = delta.val, mpen = mpen, \n        vpen = vpen, lambda = lambda, ...)\n    out <- nlm(f = llk, p = env$coef, iterlim = 10000)\n    out$lambda <- lambda\n    sm$coefficients <- out$coefficients <- out$estimate\n    out$estimate <- ",
        "NULL\n    sm$xt$si$alpha <- out$coefficients[1:length(sm$xt$si$alpha)]\n    out$smooth <- sm\n    out$formula <- formula\n    env$coef <- out$coefficients\n    env$out <- out\n    loss <- gcv.aft_nl(out, llk.val, kde = eff$eval(sm$coefficients)$kde)\n    attr(loss, \"gradient\") <- attr(loss, \"hessian\") <- NULL\n    if (trace) {\n        cat(paste0(\"iter = \", out$iterations, \"\\nGCV: \", loss, \n            \"  ||   llk = \", env$out$minimum, \"\\nlambda = \", \n            paste(lambda, collapse = \"\\t \"), \"\\n\\n\"))\n    }\n    r",
        "eturn(loss)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#14: llk <- llk_afc(eff, sm = sm, delta = delta, vpen = vpen, mpen = mpen, \n    lambda = lambda, ...)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#16: llk.val <- llk_afc(eff.val, sm = sm, delta = delta.val, mpen = mpen, \n    vpen = vpen, lambda = lambda, ...)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/lambda_optim.R#19: out <- nlm(f = llk, p = env$coef, iterlim = 10000)\n",
        "Browse[1]> ",
        "debug(llk)",
        "Browse[1]> ",
        "debugging in: f(x, ...)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#41: {\n    if (is.list(param)) \n        param <- do.call(\"cbind\", param)\n    if (is.vector(param)) \n        param <- matrix(param, ncol = 1)\n    obj <- tryCatch(obj$eval(param = param, deriv = deriv + 1, \n        kde), warning = function(war) {\n        print(param)\n    })\n    ltx <- tryCatch(log.htx(obj, deriv = deriv, delta = delta), \n        warning = function(war) {\n            print(par",
        "am)\n        })\n    stx <- tryCatch(log.Stx(obj, deriv = deriv), warning = function(war) {\n        print(param)\n    })\n    llk <- sum(ltx$h) + sum(stx$s)\n    loss_d1 <- loss_d2 <- NULL\n    na <- obj$na\n    Spen <- Reduce(\"+\", lapply(1:length(sm$S), function(ii) lambda[ii] * \n        sm$S[[ii]]))\n    pen <- pen_var_si(o = obj, v = 1, deriv = deriv)\n    pen_m <- pen_mean_logS(sm = sm, coefs = param, deriv = deriv)\n    loss <- drop(-llk + vpen * pen$d0 + t(param) %*% Spen %*% \n        param) + mpen * pen_m$d0\n ",
        "   print(loss)\n    if (deriv > 0) {\n        d1 <- c(ltx$dhda + stx$dhda, ltx$dhdb + stx$dhdb)\n        loss_d1 <- -d1 + 2 * Spen %*% param + mpen * pen_m$d1\n        loss_d1[1:na] <- loss_d1[1:na] + vpen * pen$d1\n        if (deriv > 1) {\n            d2 <- ltx$dhab + stx$dhab\n            loss_d2 <- -d2 + 2 * Spen + mpen * pen_m$d2\n            loss_d2[1:na, 1:na] <- loss_d2[1:na, 1:na] + vpen * \n                pen$d2\n        }\n    }\n    return(structure(loss, gradient = loss_d1, hessian = loss_d2))\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#43: if (is.list(param)) param <- do.call(\"cbind\", param)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#44: if (is.vector(param)) param <- matrix(param, ncol = 1)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#44: param <- matrix(param, ncol = 1)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#46: obj <- tryCatch(obj$eval(param = param, deriv = deriv + 1, kde), \n    warning = function(war) {\n        print(param)\n    })\n",
        "Browse[1]> ",
        "debug(obj$eval)",
        "Browse[1]> ",
        "debugging in: obj$eval(param = param, deriv = deriv + 1, kde)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#16: {\n    na <- ncol(Xi)\n    nb <- length(param) - na\n    alpha <- param[1:na]\n    alpha[1] <- exp(alpha[1])\n    alpha[-1] <- -alpha[-1]\n    beta <- param[-(1:na)]\n    if (basis$drop.coef) {\n        betat <- exp(beta)\n    }\n    else {\n        betat <- c(beta[1], exp(beta[-1]))\n    }\n    if (is.null(a0)) {\n        a0 <- alpha * 0\n    }\n    ax1 <- drop(",
        "Xi %*% (alpha + a0))\n    if (unif & is.null(kde)) {\n        if (kernel == \"gaussian\") {\n            ss <- seq(1, nrow(Xi), length.out = min(nrow(Xi), \n                100))\n            kde <- .ckde(ax1[ss], h = (4/(3 * nrow(Xi[ss, ])))^(1/5), \n                Xi_fix = Xi[ss, ], kernel = \"gauss\")\n        }\n        if (kernel == \"triweight\") {\n            kde <- .ckde(ax1, h = (4/(3 * nrow(Xi)))^(1/5), Xi_fix = Xi, \n                kernel = \"tri\")\n        }\n        ax <- kde(ax1, Xi = Xi, deriv = deriv)\n    }",
        "\n    else if (unif & !is.null(kde)) {\n        ax <- kde(ax1, Xi = Xi, deriv = deriv)\n    }\n    else {\n        ax <- list(d0 = ax1, d1 = Xi)\n    }\n    store <- basis$evalX(x = ax$d0, deriv = deriv)\n    store$Xi <- Xi\n    store$g1 <- c(alpha[1], rep(-1, na - 1))\n    if (deriv >= 1) {\n        if (basis$drop.coef) {\n            btb <- betat\n        }\n        else {\n            btb <- c(1, betat[-1])\n        }\n        store$f1 <- drop(store$X1 %*% betat)\n        store$u1 <- ax$d1\n        store$fb <- sweep(store$",
        "X0, 2, btb, FUN = \"*\")\n        store$f1b <- sweep(store$X1, 2, btb, FUN = \"*\")\n        if (deriv >= 2) {\n            store$f2 <- drop(store$X2 %*% betat)\n            store$fbb <- store$fb[, -1]\n            store$u2 <- ax$d2\n            if (deriv >= 3) {\n                store$f3 <- drop(store$X3 %*% betat)\n                store$g3 <- store$g2\n            }\n        }\n    }\n    o <- eff_misi(Xi = Xi, basis = basis)\n    o$f <- drop(store$X0 %*% betat)\n    o$ax <- ax$d0\n    o$param <- param\n    o$a0 <- a0\n    o$",
        "na <- na\n    o$store <- store\n    o$deriv <- deriv\n    o$kde <- kde\n    o$drop.coef <- basis$drop.coef\n    return(o)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#17: na <- ncol(Xi)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#18: nb <- length(param) - na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#21: alpha <- param[1:na]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#22: alpha[1] <- exp(alpha[1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#23: alpha[-1] <- -alpha[-1]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#24: beta <- param[-(1:na)]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#25: if (basis$drop.coef) {\n    betat <- exp(beta)\n} else {\n    betat <- c(beta[1], exp(beta[-1]))\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#25: betat <- exp(beta)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#28: if (is.null(a0)) {\n    a0 <- alpha * 0\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#29: a0 <- alpha * 0\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#33: ax1 <- drop(Xi %*% (alpha + a0))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#34: if (unif & is.null(kde)) {\n    if (kernel == \"gaussian\") {\n        ss <- seq(1, nrow(Xi), length.out = min(nrow(Xi), 100))\n        kde <- .ckde(ax1[ss], h = (4/(3 * nrow(Xi[ss, ])))^(1/5), \n            Xi_fix = Xi[ss, ], kernel = \"gauss\")\n    }\n    if (kernel == \"triweight\") {\n        kde <- .ckde(ax1, h = (4/(3 * nrow(Xi)))^(1/5), Xi_fix = Xi, \n            kernel = \"tri\")\n    }\n    ax <- kde(ax1, Xi = Xi, d",
        "eriv = deriv)\n} else if (unif & !is.null(kde)) {\n    ax <- kde(ax1, Xi = Xi, deriv = deriv)\n} else {\n    ax <- list(d0 = ax1, d1 = Xi)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#34: if (unif & !is.null(kde)) {\n    ax <- kde(ax1, Xi = Xi, deriv = deriv)\n} else {\n    ax <- list(d0 = ax1, d1 = Xi)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#46: ax <- list(d0 = ax1, d1 = Xi)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#50: store <- basis$evalX(x = ax$d0, deriv = deriv)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#51: store$Xi <- Xi\n",
        "Browse[1]> ",
        "matplot(store$X0, x = ax1)",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#52: store$g1 <- c(alpha[1], rep(-1, na - 1))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#53: if (deriv >= 1) {\n    if (basis$drop.coef) {\n        btb <- betat\n    }\n    else {\n        btb <- c(1, betat[-1])\n    }\n    store$f1 <- drop(store$X1 %*% betat)\n    store$u1 <- ax$d1\n    store$fb <- sweep(store$X0, 2, btb, FUN = \"*\")\n    store$f1b <- sweep(store$X1, 2, btb, FUN = \"*\")\n    if (deriv >= 2) {\n        store$f2 <- drop(store$X2 %*% betat)\n        store$fbb <- store$fb[, -1]\n        store$u2 <- ax",
        "$d2\n        if (deriv >= 3) {\n            store$f3 <- drop(store$X3 %*% betat)\n            store$g3 <- store$g2\n        }\n    }\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#55: if (basis$drop.coef) {\n    btb <- betat\n} else {\n    btb <- c(1, betat[-1])\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#55: btb <- betat\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#58: store$f1 <- drop(store$X1 %*% betat)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#59: store$u1 <- ax$d1\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#60: store$fb <- sweep(store$X0, 2, btb, FUN = \"*\")\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#61: store$f1b <- sweep(store$X1, 2, btb, FUN = \"*\")\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#63: if (deriv >= 2) {\n    store$f2 <- drop(store$X2 %*% betat)\n    store$fbb <- store$fb[, -1]\n    store$u2 <- ax$d2\n    if (deriv >= 3) {\n        store$f3 <- drop(store$X3 %*% betat)\n        store$g3 <- store$g2\n    }\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#64: store$f2 <- drop(store$X2 %*% betat)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#65: store$fbb <- store$fb[, -1]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#66: store$u2 <- ax$d2\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#68: if (deriv >= 3) {\n    store$f3 <- drop(store$X3 %*% betat)\n    store$g3 <- store$g2\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#69: store$f3 <- drop(store$X3 %*% betat)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#70: store$g3 <- store$g2\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#75: o <- eff_misi(Xi = Xi, basis = basis)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#76: o$f <- drop(store$X0 %*% betat)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#77: o$ax <- ax$d0\n",
        "Browse[1]> ",
        "plot(o$f~ax1)",
        "Browse[1]> ",
        "plot(exp(-exp(o$f))~ax1)",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#78: o$param <- param\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#79: o$a0 <- a0\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#80: o$na <- na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#81: o$store <- store\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#82: o$deriv <- deriv\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#83: o$kde <- kde\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#84: o$drop.coef <- basis$drop.coef\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/eff_misi.R#86: return(o)\n",
        "Browse[1]> ",
        "exiting from: obj$eval(param = param, deriv = deriv + 1, kde)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#50: ltx <- tryCatch(log.htx(obj, deriv = deriv, delta = delta), warning = function(war) {\n    print(param)\n})\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#52: stx <- tryCatch(log.Stx(obj, deriv = deriv), warning = function(war) {\n    print(param)\n})\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#55: llk <- sum(ltx$h) + sum(stx$s)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#56: loss_d1 <- loss_d2 <- NULL\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#57: na <- obj$na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#58: Spen <- Reduce(\"+\", lapply(1:length(sm$S), function(ii) lambda[ii] * \n    sm$S[[ii]]))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#59: pen <- pen_var_si(o = obj, v = 1, deriv = deriv)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#60: pen_m <- pen_mean_logS(sm = sm, coefs = param, deriv = deriv)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#61: loss <- drop(-llk + vpen * pen$d0 + t(param) %*% Spen %*% param) + \n    mpen * pen_m$d0\n",
        "Browse[1]> ",
        "llk",
        "[1] -3947.154\n",
        "Browse[1]> ",
        "vpen*pen$d0 ",
        "[1] 0.004444444\n",
        "Browse[1]> ",
        "t(param)%*%Spen%*%param",
        "           [,1]\n[1,] 0.02904725\n",
        "Browse[1]> ",
        "mpen*pen_m$d0",
        "[1] 12.07533\n",
        "Browse[1]> ",
        "debug(pen_mean_logS)",
        "Browse[1]> ",
        "    pen_m <- pen_mean_logS(sm = sm, coefs = param, deriv = deriv)",
        "debugging in: pen_mean_logS(sm = sm, coefs = param, deriv = deriv)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#4: {\n    kk <- sm$interior.knots.bound[1] + 0.5\n    Xt0 <- sm$xt$si$X\n    Xt0[, 1] <- kk\n    gs <- get.si(sm, coefs, Xt0, deriv = deriv)\n    n <- length(gs$f)\n    mhat <- sum(gs$s$s)/n\n    if (mhat > 0.01) \n        print(mhat)\n    l0 <- 0.5 * (mhat - m)^2\n    l1 <- l2 <- NULL\n    if (deriv) {\n        l1 <- mhat * c(gs$s$dhda, gs$s$dhdb)/n\n  ",
        "      if (deriv > 1) {\n            l2 <- (mhat * gs$s$dhab)/n + (c(gs$s$dhda, gs$s$dhdb) %o% \n                c(gs$s$dhda, gs$s$dhdb))/n^2\n        }\n    }\n    return(list(d0 = l0, d1 = l1, d2 = l2))\n}\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#6: kk <- sm$interior.knots.bound[1] + 0.5\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#9: Xt0 <- sm$xt$si$X\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#10: Xt0[, 1] <- kk\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#12: gs <- get.si(sm, coefs, Xt0, deriv = deriv)\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#13: n <- length(gs$f)\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#15: mhat <- sum(gs$s$s)/n\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#16: if (mhat > 0.01) print(mhat)\n",
        "Browse[2]> ",
        "mhat",
        "[1] -0.04914333\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#18: l0 <- 0.5 * (mhat - m)^2\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#20: l1 <- l2 <- NULL\n",
        "Browse[2]> ",
        "l0",
        "[1] 0.001207533\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#21: if (deriv) {\n    l1 <- mhat * c(gs$s$dhda, gs$s$dhdb)/n\n    if (deriv > 1) {\n        l2 <- (mhat * gs$s$dhab)/n + (c(gs$s$dhda, gs$s$dhdb) %o% \n            c(gs$s$dhda, gs$s$dhdb))/n^2\n    }\n}\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#22: l1 <- mhat * c(gs$s$dhda, gs$s$dhdb)/n\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#24: if (deriv > 1) {\n    l2 <- (mhat * gs$s$dhab)/n + (c(gs$s$dhda, gs$s$dhdb) %o% \n        c(gs$s$dhda, gs$s$dhdb))/n^2\n}\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#25: l2 <- (mhat * gs$s$dhab)/n + (c(gs$s$dhda, gs$s$dhdb) %o% c(gs$s$dhda, \n    gs$s$dhdb))/n^2\n",
        "Browse[2]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/pen_mean_logS.R#29: return(list(d0 = l0, d1 = l1, d2 = l2))\n",
        "Browse[2]> ",
        "exiting from: pen_mean_logS(sm = sm, coefs = param, deriv = deriv)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#62: print(loss)\n",
        "Browse[1]> ",
        "[1] 3959.263\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/llk_afc.R#66: if (deriv > 0) {\n    d1 <- c(ltx$dhda + stx$dhda, ltx$dhdb + stx$dhdb)\n    loss_d1 <- -d1 + 2 * Spen %*% param + mpen * pen_m$d1\n    loss_d1[1:na] <- loss_d1[1:na] + vpen * pen$d1\n    if (deriv > 1) {\n        d2 <- ltx$dhab + stx$dhab\n        loss_d2 <- -d2 + 2 * Spen + mpen * pen_m$d2\n        loss_d2[1:na, 1:na] <- loss_d2[1:na, 1:na] + vpen * pen$d2\n    }\n}\n",
        "Browse[1]> ",
        "Q",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \n              [,1]\n [1,]  -0.85814092\n [2,]  -1.61429977\n [3,]   0.84607573\n [4,]  -0.40439774\n [5,]   0.01666710\n [6,]   0.01580533\n [7,]  -0.60436806\n [8,]  -0.48034170\n [9,]  -0.12182991\n[10,]  -0.09526257\n[11,]  -0.08755140\n",
        "[12,]  -0.35752245\n[13,]   0.01826084\n[14,]   0.64281479\n[15,]  -0.55783679\n[16,]  38.79108909\n[17,] -50.00000000\n[18,]  39.12555712\n[19,] -50.00000000\n[20,]  11.74512958\n[21,] -50.00000000\n[22,]   4.51209976\n[23,]   3.41224922\n[24,] -50.00000000\n[25,]   3.24845029\n[26,] -50.00000000\n[27,]   3.73950788\n[28,] -50.00000000\n[29,]   6.52552668\n[30,] -50.00000000\n[31,]  23.45348645\n[32,] -50.00000000\n[33,] 100.00000000\n[34,] -50.00000000\n",
        "Errore in ltx$h : $ operator is invalid for atomic vectors\n",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \n<simpleWarning in log(d1): Si è prodotto un NaN>\n[1] -0.1218537\n[1] \"-0.870908721370266,-1.64722049241506,0.827141516294699,-0.376655139710322,0.0394450517389916,0.0198205841550405,-0.421523470757847,-1.81224946505187,-0.133241",
        "807591052,0.762058763990986,0.105555129909118,0.67184202392256,0.127887804986825,-1.7905387659995,-0.355930678766113,38.7726980014014,-50,39.1071853047489,-50,11.2795537671982,6.85744497701508,-50,4.21490859992705,-50,3.20236787152237,-50,3.65111800767452,-50,6.313697092657,-50,-50,100,-50,100\"\n[1] 0.4642355\n[1] 1.134208e+98\n",
        "Errore in loss_d2[1:na, 1:na] : numero di dimensioni errato\nIn aggiunta: Messaggi di avvertimento:\n1: In log(d1) : Si è prodotto un NaN\n2: In log(d1) : Si è prodotto un NaN\n3: In log(d1) : Si è prodotto un NaN\n",
        "> ",
        "debug(log.htx)",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "debugging in: log.htx(obj, deriv = deriv, delta = delta)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#7: {\n    if (is.null(param)) {\n        param <- o$param\n        if (is.null(param)) {\n            stop(\"param vector not provided!\")\n        }\n    }\n    else {\n        o <- o$eval(param = param, deriv = deriv + 1)\n    }\n    if (o$deriv < deriv + 1) {\n        o <- o$eval(param = param, deriv = deriv + 1)\n    }\n    if (is.null(delta)) {\n        delta <- rep(T",
        "RUE, length(o$f))\n    }\n    else {\n        delta <- as.logical(delta)\n    }\n    d0 <- o$f[delta]\n    d1 <- o$store$f1[delta]\n    d2 <- o$store$f2[delta]\n    d3 <- o$store$f3[delta]\n    u1 <- o$store$u1[delta, ]\n    u2 <- o$store$u2[delta, ]\n    g1 <- o$store$g1\n    Xi <- o$store$Xi[delta, ]\n    X <- o$store$X0[delta, ]\n    X1 <- o$store$X1[delta, ]\n    X2 <- o$store$X2[delta, ]\n    alpha <- param[1:o$na]\n    alpha <- c(exp(alpha[1]), -alpha[-1])\n    beta <- param[-(1:o$na)]\n    if (o$drop.coef) {\n        be",
        "tat <- exp(beta)\n    }\n    else {\n        betat <- c(beta[1], exp(beta[-1]))\n    }\n    n <- nrow(Xi)\n    if (any(is.na(log(d1)) | is.infinite(log(d1)))) {\n        print(min(d1))\n        print(paste0(param, collapse = \",\"))\n        print(sd(o$ax))\n    }\n    if (alpha[1] == 0) \n        print(param)\n    log.t <- o$store$Xi[delta, 1]\n    out <- list()\n    f <- d0 + log(d1)\n    out$h <- f - log.t + log(alpha[1])\n    if (deriv >= 1) {\n        aQ <- sweep(u1, 2, g1, \"*\")\n        if (o$drop.coef) {\n            btb ",
        "<- betat\n        }\n        else {\n            btb <- c(1, betat[-1])\n        }\n        f1 <- d1 + d2/d1\n        dfdbt <- colSums2(X + X1/d1)\n        out$dhda <- crossprod(f1, aQ)\n        out$dhda[1] <- out$dhda[1] + n\n        out$dhdb <- dfdbt * btb\n        if (deriv >= 2) {\n            f2 <- d2 + d3/d1 - (d2/d1)^2\n            df1dbt <- X1 + X2/d1 - X1 * d2/d1^2\n            if (o$unif) {\n                daa <- diag(rep(0, o$na))\n                daa[lower.tri(daa, diag = TRUE)] <- crossprod(f1, \n            ",
        "      u2)\n                daa[upper.tri(daa, diag = FALSE)] <- t(daa)[upper.tri(daa, \n                  diag = FALSE)]\n                daa <- daa * g1 %o% g1\n                h_aa <- crossprod(aQ, f2 * aQ) - daa\n            }\n            else {\n                daa <- diag(rep(0, o$na))\n                daa[, 1] <- daa[1, ] <- crossprod(f1, u1)\n                h_aa <- crossprod(aQ, f2 * aQ)\n            }\n            h_aa[1, 1] <- h_aa[1, 1] + out$dhda[1] - n\n            h_bb <- -diag(btb) %*% (crossprod(X1, X1",
        "/d1^2)) %*% \n                diag(btb)\n            if (o$drop.coef) {\n                diag(h_bb) <- diag(h_bb) + (out$dhdb)\n            }\n            else {\n                diag(h_bb)[-1] <- diag(h_bb)[-1] + (out$dhdb)[-1]\n            }\n            h_ba <- crossprod(df1dbt, aQ) * (btb %o% rep(1, o$na))\n            out$dhab <- rbind(cbind(h_aa, t(h_ba)), cbind(h_ba, \n                h_bb))\n        }\n    }\n    return(out)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#9: if (is.null(param)) {\n    param <- o$param\n    if (is.null(param)) {\n        stop(\"param vector not provided!\")\n    }\n} else {\n    o <- o$eval(param = param, deriv = deriv + 1)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#10: param <- o$param\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#11: if (is.null(param)) {\n    stop(\"param vector not provided!\")\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#14: if (o$deriv < deriv + 1) {\n    o <- o$eval(param = param, deriv = deriv + 1)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#16: if (is.null(delta)) {\n    delta <- rep(TRUE, length(o$f))\n} else {\n    delta <- as.logical(delta)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#18: delta <- as.logical(delta)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#20: d0 <- o$f[delta]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#20: d1 <- o$store$f1[delta]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#20: d2 <- o$store$f2[delta]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#21: d3 <- o$store$f3[delta]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#22: u1 <- o$store$u1[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#22: u2 <- o$store$u2[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#23: g1 <- o$store$g1\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#24: Xi <- o$store$Xi[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#24: X <- o$store$X0[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#25: X1 <- o$store$X1[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#25: X2 <- o$store$X2[delta, ]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#27: alpha <- param[1:o$na]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#28: alpha <- c(exp(alpha[1]), -alpha[-1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#30: beta <- param[-(1:o$na)]\n",
        "Browse[1]> ",
        "plot(d1~Xi%*%alpha)",
        "Browse[1]> ",
        "plot(d0~Xi%*%alpha)",
        "Browse[1]> ",
        "plot(exp(-exp(d0))~Xi%*%alpha)",
        "Browse[1]> ",
        "matplot(X, x=Xi%*%alpha)",
        "Browse[1]> ",
        "plot(exp(-exp(o$f))~o$ax)",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#31: if (o$drop.coef) {\n    betat <- exp(beta)\n} else {\n    betat <- c(beta[1], exp(beta[-1]))\n}\n",
        "Browse[1]> ",
        "beta",
        " [1]  38.765961 -50.000000 -50.000000  39.100511 -50.000000   7.197990\n [7]   4.920231 -50.000000   2.972055   2.637200 -50.000000   3.706966\n[13] -50.000000   6.325401 -50.000000 -50.000000 100.000000 -50.000000\n[19] 100.000000\n",
        "Browse[1]> ",
        "Q",
        "> ",
        "debug(initialize.coef)",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "debugging in: initialize.coef(sm, lambda[1])\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#1: {\n    alpha <- sm$xt$si$alpha\n    alpha[1] <- exp(alpha[1])\n    alpha[-1] <- -alpha[-1]\n    na <- length(alpha)\n    ss <- function(bt, y, X, S) {\n        if (sm$drop.coef) {\n            bet <- exp(bt)\n        }\n        else {\n            bet <- c(bt[1], exp(bt[-1]))\n        }\n        res <- y - X %*% bet\n        pen <- t(bt) %*% S %*% bt\n        sum(res^2)/l",
        "ength(y) + pen\n    }\n    yy <- log(-log(1 - rank(sm$xt$si$X %*% alpha)/(nrow(sm$X) + \n        1)))\n    kk <- ncol(sm$X) - na\n    S <- sm$S[[1]][-(1:na), -(1:na)]\n    b1 <- optim(fn = ss, par = c(1, rnorm(kk - 1)), y = yy, X = sm$X[, \n        -(1:na)], S = lambda * S, method = \"L-BFGS-B\", lower = -50, \n        upper = 100)\n    c(sm$xt$si$alpha, b1$par)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#3: alpha <- sm$xt$si$alpha\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#4: alpha[1] <- exp(alpha[1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#4: alpha[-1] <- -alpha[-1]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#5: na <- length(alpha)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#8: ss <- function(bt, y, X, S) {\n    if (sm$drop.coef) {\n        bet <- exp(bt)\n    }\n    else {\n        bet <- c(bt[1], exp(bt[-1]))\n    }\n    res <- y - X %*% bet\n    pen <- t(bt) %*% S %*% bt\n    sum(res^2)/length(y) + pen\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#16: yy <- log(-log(1 - rank(sm$xt$si$X %*% alpha)/(nrow(sm$X) + 1)))\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#17: kk <- ncol(sm$X) - na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#18: S <- sm$S[[1]][-(1:na), -(1:na)]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#19: b1 <- optim(fn = ss, par = c(1, rnorm(kk - 1)), y = yy, X = sm$X[, \n    -(1:na)], S = lambda * S, method = \"L-BFGS-B\", lower = -50, \n    upper = 100)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#23: c(sm$xt$si$alpha, b1$par)\n",
        "Browse[1]> ",
        "exiting from: initialize.coef(sm, lambda[1])\ndebugging in: log.htx(obj, deriv = deriv, delta = delta)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#7: {\n    if (is.null(param)) {\n        param <- o$param\n        if (is.null(param)) {\n            stop(\"param vector not provided!\")\n        }\n    }\n    else {\n        o <- o$eval(param = param, deriv = deriv + 1)\n    }\n    if (o$deriv < deriv + 1) {\n        o <- o$eval(param = param, deriv = deriv + 1)\n    }\n   ",
        " if (is.null(delta)) {\n        delta <- rep(TRUE, length(o$f))\n    }\n    else {\n        delta <- as.logical(delta)\n    }\n    d0 <- o$f[delta]\n    d1 <- o$store$f1[delta]\n    d2 <- o$store$f2[delta]\n    d3 <- o$store$f3[delta]\n    u1 <- o$store$u1[delta, ]\n    u2 <- o$store$u2[delta, ]\n    g1 <- o$store$g1\n    Xi <- o$store$Xi[delta, ]\n    X <- o$store$X0[delta, ]\n    X1 <- o$store$X1[delta, ]\n    X2 <- o$store$X2[delta, ]\n    alpha <- param[1:o$na]\n    alpha <- c(exp(alpha[1]), -alpha[-1])\n    beta <- param",
        "[-(1:o$na)]\n    if (o$drop.coef) {\n        betat <- exp(beta)\n    }\n    else {\n        betat <- c(beta[1], exp(beta[-1]))\n    }\n    n <- nrow(Xi)\n    if (any(is.na(log(d1)) | is.infinite(log(d1)))) {\n        print(min(d1))\n        print(paste0(param, collapse = \",\"))\n        print(sd(o$ax))\n    }\n    if (alpha[1] == 0) \n        print(param)\n    log.t <- o$store$Xi[delta, 1]\n    out <- list()\n    f <- d0 + log(d1)\n    out$h <- f - log.t + log(alpha[1])\n    if (deriv >= 1) {\n        aQ <- sweep(u1, 2, g1, \"*\"",
        ")\n        if (o$drop.coef) {\n            btb <- betat\n        }\n        else {\n            btb <- c(1, betat[-1])\n        }\n        f1 <- d1 + d2/d1\n        dfdbt <- colSums2(X + X1/d1)\n        out$dhda <- crossprod(f1, aQ)\n        out$dhda[1] <- out$dhda[1] + n\n        out$dhdb <- dfdbt * btb\n        if (deriv >= 2) {\n            f2 <- d2 + d3/d1 - (d2/d1)^2\n            df1dbt <- X1 + X2/d1 - X1 * d2/d1^2\n            if (o$unif) {\n                daa <- diag(rep(0, o$na))\n                daa[lower.tri(daa,",
        " diag = TRUE)] <- crossprod(f1, \n                  u2)\n                daa[upper.tri(daa, diag = FALSE)] <- t(daa)[upper.tri(daa, \n                  diag = FALSE)]\n                daa <- daa * g1 %o% g1\n                h_aa <- crossprod(aQ, f2 * aQ) - daa\n            }\n            else {\n                daa <- diag(rep(0, o$na))\n                daa[, 1] <- daa[1, ] <- crossprod(f1, u1)\n                h_aa <- crossprod(aQ, f2 * aQ)\n            }\n            h_aa[1, 1] <- h_aa[1, 1] + out$dhda[1] - n\n       ",
        "     h_bb <- -diag(btb) %*% (crossprod(X1, X1/d1^2)) %*% \n                diag(btb)\n            if (o$drop.coef) {\n                diag(h_bb) <- diag(h_bb) + (out$dhdb)\n            }\n            else {\n                diag(h_bb)[-1] <- diag(h_bb)[-1] + (out$dhdb)[-1]\n            }\n            h_ba <- crossprod(df1dbt, aQ) * (btb %o% rep(1, o$na))\n            out$dhab <- rbind(cbind(h_aa, t(h_ba)), cbind(h_ba, \n                h_bb))\n        }\n    }\n    return(out)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/log_htx.R#9: if (is.null(param)) {\n    param <- o$param\n    if (is.null(param)) {\n        stop(\"param vector not provided!\")\n    }\n} else {\n    o <- o$eval(param = param, deriv = deriv + 1)\n}\n",
        "Browse[1]> ",
        "plot(exp(-exp(o$f))~o$ax)",
        "Browse[1]> ",
        "Q",
        "> ",
        "debug(aft_nl)",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "debugging in: aft_nl(times ~ s(x1, k = 10) + x2.1 + x2.2 + x2.3 + x2.4 + x2.5, \n    outer.args = list(k = 20), data = dat, val = validation, \n    censored = \"c\", trace = TRUE, ps = FALSE)\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#10: {\n    dat <- .prep.df(formula, data, val, censored, m = outer.args$m, \n        k = outer.args$k, pspline = ps)\n    form_comp <- .compile_formula(dat$formula)\n    sm <- aftNested:::smooth.construct.misi.smooth.spec(object = fo",
        "rm_comp, \n        data = dat$X, knots = list(), ...)\n    eff <- eff_misi(sm$xt$si$X, basis = sm$xt$basis)\n    lambda <- initial.lambda(sm)\n    init.par <- initialize.coef(sm, lambda[1])\n    out_env <- new.env()\n    lopt <- lambda.optim(eff, sm, delta = data[[censored]], vpen = 10000, \n        mpen = 10000, out_env, val = dat$val, delta.val = dat$val[[censored]], \n        init.par = init.par, trace = trace)\n    out_l <- optim(par = lambda, fn = lopt, lower = min.lambda, \n        method = \"L-BFGS-B\")\n    out ",
        "<- out_env$out\n    out$lambda <- out_l$par\n    out$gcv <- out_l$value\n    out$convergence <- out_l$convergence\n    out$iterations <- out_l$counts\n    class(out) <- c(\"aftnl\", class(out))\n    return(out)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#13: dat <- .prep.df(formula, data, val, censored, m = outer.args$m, \n    k = outer.args$k, pspline = ps)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#15: form_comp <- .compile_formula(dat$formula)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#17: sm <- aftNested:::smooth.construct.misi.smooth.spec(object = form_comp, \n    data = dat$X, knots = list(), ...)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#19: eff <- eff_misi(sm$xt$si$X, basis = sm$xt$basis)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#21: lambda <- initial.lambda(sm)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#22: init.par <- initialize.coef(sm, lambda[1])\n",
        "Browse[1]> ",
        "debugging in: initialize.coef(sm, lambda[1])\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#1: {\n    alpha <- sm$xt$si$alpha\n    alpha[1] <- exp(alpha[1])\n    alpha[-1] <- -alpha[-1]\n    na <- length(alpha)\n    ss <- function(bt, y, X, S) {\n        if (sm$drop.coef) {\n            bet <- exp(bt)\n        }\n        else {\n            bet <- c(bt[1], exp(bt[-1]))\n        }\n        res <- y - X %*% bet\n        pen <- t(bt) %*% S %*% bt\n        sum(res^2)/l",
        "ength(y) + pen\n    }\n    yy <- log(-log(1 - rank(sm$xt$si$X %*% alpha)/(nrow(sm$X) + \n        1)))\n    kk <- ncol(sm$X) - na\n    S <- sm$S[[1]][-(1:na), -(1:na)]\n    b1 <- optim(fn = ss, par = c(1, rnorm(kk - 1)), y = yy, X = sm$X[, \n        -(1:na)], S = lambda * S, method = \"L-BFGS-B\", lower = -50, \n        upper = 100)\n    c(sm$xt$si$alpha, b1$par)\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#3: alpha <- sm$xt$si$alpha\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#4: alpha[1] <- exp(alpha[1])\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#4: alpha[-1] <- -alpha[-1]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#5: na <- length(alpha)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#8: ss <- function(bt, y, X, S) {\n    if (sm$drop.coef) {\n        bet <- exp(bt)\n    }\n    else {\n        bet <- c(bt[1], exp(bt[-1]))\n    }\n    res <- y - X %*% bet\n    pen <- t(bt) %*% S %*% bt\n    sum(res^2)/length(y) + pen\n}\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#16: yy <- log(-log(1 - rank(sm$xt$si$X %*% alpha)/(nrow(sm$X) + 1)))\n",
        "Browse[1]> ",
        "lambda",
        "    outer \n-1.754888 \n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#17: kk <- ncol(sm$X) - na\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#18: S <- sm$S[[1]][-(1:na), -(1:na)]\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#19: b1 <- optim(fn = ss, par = c(1, rnorm(kk - 1)), y = yy, X = sm$X[, \n    -(1:na)], S = lambda * S, method = \"L-BFGS-B\", lower = -50, \n    upper = 100)\n",
        "Browse[1]> ",
        "debug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/initialize_coef.R#23: c(sm$xt$si$alpha, b1$par)\n",
        "Browse[1]> ",
        "plot(exp(-exp(sm$X[ , -(1:na)]%*%exp(b1$par)))~sm$xt$si$X%*%alpha)",
        "Browse[1]> ",
        "lambda <- -lambda",
        "Browse[1]> ",
        "  b1 <- optim(fn = ss, par = c(1, rnorm(kk-1)), y = yy,",
        "+ ",
        "              X = sm$X[ , -(1:na)], S = lambda*S,",
        "+ ",
        "              method = \"L-BFGS-B\", lower = -50, upper = 100)",
        "Browse[1]> ",
        "plot(exp(-exp(sm$X[ , -(1:na)]%*%exp(b1$par)))~sm$xt$si$X%*%alpha)",
        "Browse[1]> ",
        "exiting from: initialize.coef(sm, lambda[1])\ndebug in /home/claudia/Dropbox/dottorato pd/Accelerated_failure_time/code/aftNested/R/aft_nl.R#23: out_env <- new.env()\n",
        "Browse[1]> ",
        "Q",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = FALSE)",
        "[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.32\n[1] 3779.321\n[1] 3779.32\n[1] 3779.321\n[1] 3779.321\n[1] 3779.32\n[1] 3779.32\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.32\n[1] 3779.321\n[1] 3779.3",
        "2\n[1] 3779.321\n[1] 3779.321\n[1] 3779.32\n[1] 3779.32\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3779.321\n[1] 3723.232\n[1] 3668.637\n[1] 4510.883\n[1] 3301.468\n[1] 3158.095\n[1] 2424.934\n[1] 2424.838\n[1] 1951.817\n[1] 1",
        "849.37\n[1] 1713.085\n[1] 1699.044\n[1] 1693.507\n[1] 1692.251\n[1] 1691.83\n[1] 1691.782\n[1] 1691.781\n[1] 1691.781\n[1] 545.8834\niter = 16\nGCV: 545.88335928198  ||   llk = 1691.78111549311\nlambda = 0.1729266612144\n\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] ",
        "1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.",
        "807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 1691.807\n[1] 545.8986\niter = 1\nGCV: 545.898638009705  ||   llk = 1691.8067814658\nlambda = 0.1739266612144\n\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 169",
        "1.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756",
        "\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.756\n[1] 1691.755\n[1] 1691.755\n[1] 545.868\niter = 2\nGCV: 545.868019427622  ||   llk = 1691.7553624456\nlambda = 0.1719266612144\n\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.44",
        "9\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1]",
        " 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1687.449\n[1] 1686.024\n[1] 1684.925\n[1] 1684.538\n[1] 1684.369\n[1] 1684.29\n[1] 1685.882\n[1] 1684.275\n[1] 1684.228\n[1] 1684.227\n[1] 1684.227\n[1] 540.9577\niter = 9\nGCV: 540.957689231331  ||   llk = 1684.22651923172\nlambda = 0.005\n\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.36",
        "1\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1]",
        " 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.361\n[1] 1684.357\n[1] 1684.357\n[1] 541.0552\niter = 2\nGCV: 541.055204624356  ||   llk = 1684.35685172331\nlambda = 0.006\n\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.2",
        "31\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1",
        "] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.231\n[1] 1684.227\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 13\nGCV: 1505.58378313782  ||   llk = 1732.50326223826\nlambda = 0.173518018592916\n\niter = 1\nGCV: 1505.62246551645  ||   llk = 1732.52989574424\nlambda = 0.174518018592916\n\niter = 2\nGCV: 1505.54499263952  ||   llk = 1732.476",
        "55268668\nlambda = 0.172518018592916\n\niter = 10\nGCV: 1495.70467600278  ||   llk = 1725.29662949776\nlambda = 0.005\n\niter = 2\nGCV: 1495.8372203039  ||   llk = 1725.40796545231\nlambda = 0.006\n\niter = 2\nGCV: 1495.70469963815  ||   llk = 1725.29662949705\nlambda = 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.887973898  1.954415603 -1.021616503  0.009710892  0.159461010\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1",
        "))\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 15\nGCV: 635.945137950379  ||   llk = 1754.24599396718\nlambda = 0.173153008184847\n\niter = 1\nGCV: 635.962603469218  ||   llk = 1754.27526119477\nlambda = 0.174153008184847\n\niter = 2\nGCV: 635.927585554469  ||   llk = 1754.216",
        "62102765\nlambda = 0.172153008184847\n\niter = 7\nGCV: 630.544352974209  ||   llk = 1745.48530298977\nlambda = 0.005\n\niter = 2\nGCV: 630.649567921447  ||   llk = 1745.63557579989\nlambda = 0.006\n\niter = 2\nGCV: 630.544340300272  ||   llk = 1745.48530299038\nlambda = 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.98585037  2.02564004 -1.04371076  0.03433937 -0.01013111\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n>",
        " plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "min(W)",
        "[1] 0.1982654\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=20),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 15\nGCV: 1727.51349577841  ||   llk = 1756.43327646901\nlambda = 0.173311337362251\n\niter = 1\nGCV: 1727.59718246404  ||   llk = 1756.46194006712\nlambda = 0.174311337362251\n\niter = 2\nGCV: 1727.42939961618  ||   llk = 1756.404",
        "52480254\nlambda = 0.172311337362251\n\niter = 18\nGCV: 1684.72133620077  ||   llk = 1747.59366647944\nlambda = 0.005\n\niter = 2\nGCV: 1686.61923453603  ||   llk = 1747.75514596675\nlambda = 0.006\n\niter = 2\nGCV: 1684.72133555101  ||   llk = 1747.59366647972\nlambda = 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -4.01170802  1.98652315 -0.98369783 -0.03969982  0.01378608\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n",
        "> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "Messaggio di avvertimento:\nIn nlm(f = llk, p = env$coef, iterlim = 10000) :\n  NA/Inf sostituito da valore massimo positivo\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=40),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 11\nGCV: 1678.63624950318  ||   llk = 1689.7489108139\nlambda = 2.577387793638\n\niter = 1\nGCV: 1678.65029664281  ||   llk = 1689.75698332222\nlambda = 2.578387793638\n\niter = 1\nGCV: 1678.62220559912  ||   llk = 1689.7408365219",
        "7\nlambda = 2.576387793638\n\niter = 3\nGCV: 1661.84964261102  ||   llk = 1680.55846823552\nlambda = 1.577387793638\n\niter = 1\nGCV: 1661.87010961437  ||   llk = 1680.56907870534\nlambda = 1.578387793638\n\niter = 1\nGCV: 1661.82916553171  ||   llk = 1680.54785408776\nlambda = 1.576387793638\n\niter = 10\nGCV: 1536.01513656566  ||   llk = 1648.8104437901\nlambda = 0.005\n\niter = 2\nGCV: 1539.15274254584  ||   llk = 1648.936811948\nlambda = 0.006\n\niter = 2\nGCV: 1536.01518867836  ||   llk = 1648.81044377492\nlambda = 0.005\n\n\n> f",
        "2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -4.01241015  1.96736048 -0.99516524  0.03717853 -0.05476858\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plo",
        "t(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 16\nGCV: 1998.7629198633  ||   llk = 2009.92936180678\nlambda = 0.0604437429706307\t 2.77542670288352\n\niter = 2\nGCV: 1998.86432773518  ||   llk = 2009.95551451492\nlambda = 0.0614437429706307\t 2.77542670288352\n\niter = 2\nGCV: ",
        "1998.66000539798  ||   llk = 2009.9029488565\nlambda = 0.0594437429706307\t 2.77542670288352\n\niter = 2\nGCV: 1998.79102891624  ||   llk = 2009.95651862987\nlambda = 0.0604437429706307\t 2.77642670288352\n\niter = 1\nGCV: 1998.73479795271  ||   llk = 2009.90219289059\nlambda = 0.0604437429706307\t 2.77442670288352\n\niter = 4\nGCV: 1960.16076988771  ||   llk = 1974.36359775795\nlambda = 0.0404350405561887\t 1.77562689700852\n\niter = 2\nGCV: 1960.30769970134  ||   llk = 1974.3990251465\nlambda = 0.0414350405561887\t 1.775626897",
        "00852\n\niter = 2\nGCV: 1960.010607738  ||   llk = 1974.32770675298\nlambda = 0.0394350405561887\t 1.77562689700852\n\niter = 2\nGCV: 1960.20728088949  ||   llk = 1974.40857815841\nlambda = 0.0404350405561887\t 1.77662689700852\n\niter = 1\nGCV: 1960.11423158724  ||   llk = 1974.31859152793\nlambda = 0.0404350405561887\t 1.77462689700852\n\niter = 11\nGCV: 1752.72725902963  ||   llk = 1796.67305061903\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1753.65534526294  ||   llk = 1796.78058766142\nlambda = 0.006\t 0.005\n\niter = 2\nGCV: 1752.",
        "72726059296  ||   llk = 1796.67305061928\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1753.72802975743  ||   llk = 1796.95696740568\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1752.72726095928  ||   llk = 1796.67305061882\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.9211404515  2.0783945276 -1.0164920374  0.0292641887  0.0001326666\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> plot(as.matrix(fit2$smoo",
        "th$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 15\nGCV: 1978.73226514518  ||   llk = 1989.86504249031\nlambda = 0.0604110601306732\t 2.90792956459489\n\niter = 2\nGCV: 1978.83398440926  ||   llk = 1989.89207737877\nlambda = 0.0614110601306732\t 2.90792956459489\n\niter = 2\nGCV:",
        " 1978.62911837329  ||   llk = 1989.83781893011\nlambda = 0.0594110601306732\t 2.90792956459489\n\niter = 2\nGCV: 1978.75792379969  ||   llk = 1989.88979441008\nlambda = 0.0604110601306732\t 2.90892956459489\n\niter = 1\nGCV: 1978.70659550314  ||   llk = 1989.84028019605\nlambda = 0.0604110601306732\t 2.90692956459489\n\niter = 4\nGCV: 1943.93045047404  ||   llk = 1957.91503921037\nlambda = 0.0413265570040956\t 1.90811169030957\n\niter = 2\nGCV: 1944.07328283424  ||   llk = 1957.94953188964\nlambda = 0.0423265570040956\t 1.908111",
        "69030957\n\niter = 2\nGCV: 1943.78464350837  ||   llk = 1957.88021291039\nlambda = 0.0403265570040956\t 1.90811169030957\n\niter = 2\nGCV: 1943.9716566054  ||   llk = 1957.95481890827\nlambda = 0.0413265570040956\t 1.90911169030957\n\niter = 1\nGCV: 1943.88922144676  ||   llk = 1957.87523807702\nlambda = 0.0413265570040956\t 1.90711169030957\n\niter = 7\nGCV: 1737.23280791662  ||   llk = 1781.56719429414\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1738.13205212222  ||   llk = 1781.64469020692\nlambda = 0.006\t 0.005\n\niter = 2\nGCV: 17",
        "37.23280714831  ||   llk = 1781.56719429436\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1738.2384433899  ||   llk = 1781.85532737419\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1737.2328084707  ||   llk = 1781.56719429412\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -4.015553962  2.023835806 -1.001823419  0.033057714  0.003330278\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> plot(as.matrix(fit2$smooth$x",
        "t$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398139\n[1] 0.0009398203\n[1] 0.0009398212\n[1] 0.000939821\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398209\n[1] 0.0009398209\n[1] 0.0009398212\n[1] 0.0009398212\n[1] 0.000939821\n[1] 0.000",
        "939821\n[1] 0.000939821\n[1] 0.0009398213\n[1] 0.0009398214\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398208\n[1] 0.000939817\n[1] 0.000939819\n[1] 0.0009398207\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398139\n[1] 0.0009398203\n[1] 0.0009398212\n[1] 0.000939821\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398209\n[1] 0.0009398209\n[1] 0.0009398212\n[1] 0.0009398212\n[1] 0.000939821\n[1] 0.000939821\n[1] 0.000939821\n[1] 0.0009398213\n[1] 0.0009398214\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398208\n[1",
        "] 0.000939817\n[1] 0.000939819\n[1] 0.0009398207\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 0.0009398211\n[1] 4.243189e-06\n[1] 2.246521e-09\n[1] 4.119514e-17\n[1] 4.406227e-16\n[1] 2.348423e-14\n[1] 1.003964e-12\n[1] 1.854804e-11\n[1] 8.950448e-11\n[1] 3.492205e-10\n[1] 7.949501e-10\n[1] 1.364837e-09\n[1] 1.595763e-09\n[1] 1.59667e-09\n[1] 1.597103e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\niter = 15\nGCV: 2057.87094986321  ||   llk = 2068.77159526433\nlambda = 0.0605797555999456\t 2.62170384020306\n\n[",
        "1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596495e-09\n[1] 1.596528e-09\n[1] 1.596521e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596529e-09\n[1] 1.596526e-09\n[1] 1.596522e-09\n[1] 1.596524e-09\n[1] 1.596527e-09\n[1] 1.596526e-09\n[1] 1.596527e-09\n[1] 1.596524e-09\n[1] 1.596521e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596523e-09\n[1] 1.596465e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596495e-09\n[1] 1.596528e-09\n[1] 1.596521e-09\n[1] 1.596525e-09\n[1]",
        " 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596529e-09\n[1] 1.596526e-09\n[1] 1.596522e-09\n[1] 1.596524e-09\n[1] 1.596527e-09\n[1] 1.596526e-09\n[1] 1.596527e-09\n[1] 1.596524e-09\n[1] 1.596521e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596523e-09\n[1] 1.596465e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.596525e-09\n[1] 1.582267e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\niter = 2\nGCV: 2057.96831004447  ||   llk = 2068.7941835798\nlambda = 0.0615797555999456\t 2.",
        "62170384020306\n\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582309e-09\n[1] 1.582343e-09\n[1] 1.582335e-09\n[1] 1.58234e-09\n[1] 1.58234e-09\n[1] 1.582339e-09\n[1] 1.582343e-09\n[1] 1.58234e-09\n[1] 1.582337e-09\n[1] 1.582339e-09\n[1] 1.582342e-09\n[1] 1.58234e-09\n[1] 1.582342e-09\n[1] 1.582338e-09\n[1] 1.582335e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582337e-09\n[1] 1.58228e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582309e-09\n[1] 1.582343e-09\n[1] 1.582335e-09\n[1] 1.58",
        "234e-09\n[1] 1.58234e-09\n[1] 1.582339e-09\n[1] 1.582343e-09\n[1] 1.58234e-09\n[1] 1.582337e-09\n[1] 1.582339e-09\n[1] 1.582342e-09\n[1] 1.58234e-09\n[1] 1.582342e-09\n[1] 1.582338e-09\n[1] 1.582335e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582337e-09\n[1] 1.58228e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.582339e-09\n[1] 1.610711e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\niter = 2\nGCV: 2057.7721826117  ||   llk = 2068.74883747429\nlambda = 0.0595797555999",
        "456\t 2.62170384020306\n\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.610975e-09\n[1] 1.611009e-09\n[1] 1.611002e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.61101e-09\n[1] 1.611007e-09\n[1] 1.611003e-09\n[1] 1.611005e-09\n[1] 1.611008e-09\n[1] 1.611007e-09\n[1] 1.611009e-09\n[1] 1.611005e-09\n[1] 1.611002e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611004e-09\n[1] 1.610946e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.610975e-09\n[1] 1.611009e-09\n[1] 1.611002e-",
        "09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.61101e-09\n[1] 1.611007e-09\n[1] 1.611003e-09\n[1] 1.611005e-09\n[1] 1.611008e-09\n[1] 1.611007e-09\n[1] 1.611009e-09\n[1] 1.611005e-09\n[1] 1.611002e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611004e-09\n[1] 1.610946e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.611006e-09\n[1] 1.597193e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\niter = 2\nGCV: 2057.89982755433  ||   llk = 2068.79949957882\nlambda = 0.",
        "0605797555999456\t 2.62270384020306\n\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59724e-09\n[1] 1.597273e-09\n[1] 1.597266e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.597274e-09\n[1] 1.597271e-09\n[1] 1.597267e-09\n[1] 1.597269e-09\n[1] 1.597272e-09\n[1] 1.597271e-09\n[1] 1.597272e-09\n[1] 1.597269e-09\n[1] 1.597266e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.597268e-09\n[1] 1.59721e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59724e-09\n[1] 1.597273e-09\n[1] 1.597266e-0",
        "9\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.597274e-09\n[1] 1.597271e-09\n[1] 1.597267e-09\n[1] 1.597269e-09\n[1] 1.597272e-09\n[1] 1.597271e-09\n[1] 1.597272e-09\n[1] 1.597269e-09\n[1] 1.597266e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.597268e-09\n[1] 1.59721e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.59727e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\niter = 1\nGCV: 2057.84205697105  ||   llk = 2068.74367659795\nlambda = 0.0605797555999456\t 2.620703",
        "84020306\n\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595748e-09\n[1] 1.595782e-09\n[1] 1.595775e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595782e-09\n[1] 1.59578e-09\n[1] 1.595776e-09\n[1] 1.595778e-09\n[1] 1.595781e-09\n[1] 1.59578e-09\n[1] 1.595781e-09\n[1] 1.595777e-09\n[1] 1.595775e-09\n[1] 1.595779e-09\n[1] 1.595778e-09\n[1] 1.595777e-09\n[1] 1.595719e-09\n[1] 1.595778e-09\n[1] 1.595778e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595748e-09\n[1] 1.595782e-09\n[1] 1.595775e-09\n[1] 1.59577",
        "9e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595782e-09\n[1] 1.59578e-09\n[1] 1.595776e-09\n[1] 1.595778e-09\n[1] 1.595781e-09\n[1] 1.59578e-09\n[1] 1.595781e-09\n[1] 1.595777e-09\n[1] 1.595775e-09\n[1] 1.595779e-09\n[1] 1.595778e-09\n[1] 1.595777e-09\n[1] 1.595719e-09\n[1] 1.595778e-09\n[1] 1.595778e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 1.595779e-09\n[1] 9.739467e-10\n[1] 1.148e-09\n[1] 1.148336e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\niter = 4\nGCV: 2016.4370597639  ||   llk = 2030.55066",
        "813729\nlambda = 0.039344176130743\t 1.62192934054596\n\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148465e-09\n[1] 1.148488e-09\n[1] 1.148483e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148488e-09\n[1] 1.148486e-09\n[1] 1.148484e-09\n[1] 1.148485e-09\n[1] 1.148487e-09\n[1] 1.148486e-09\n[1] 1.148487e-09\n[1] 1.148485e-09\n[1] 1.148483e-09\n[1] 1.148486e-09\n[1] 1.148485e-09\n[1] 1.148485e-09\n[1] 1.14844e-09\n[1] 1.148485e-09\n[1] 1.148485e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148465e-09\n[",
        "1] 1.148488e-09\n[1] 1.148483e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148488e-09\n[1] 1.148486e-09\n[1] 1.148484e-09\n[1] 1.148485e-09\n[1] 1.148487e-09\n[1] 1.148486e-09\n[1] 1.148487e-09\n[1] 1.148485e-09\n[1] 1.148483e-09\n[1] 1.148486e-09\n[1] 1.148485e-09\n[1] 1.148485e-09\n[1] 1.14844e-09\n[1] 1.148485e-09\n[1] 1.148485e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.148486e-09\n[1] 1.133768e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\niter = 2\nGCV: 2016.58295157797  ||   llk ",
        "= 2030.58252591587\nlambda = 0.0403441761307431\t 1.62192934054596\n\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.133869e-09\n[1] 1.133892e-09\n[1] 1.133887e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.133892e-09\n[1] 1.13389e-09\n[1] 1.133888e-09\n[1] 1.133889e-09\n[1] 1.133891e-09\n[1] 1.13389e-09\n[1] 1.133891e-09\n[1] 1.133889e-09\n[1] 1.133887e-09\n[1] 1.13389e-09\n[1] 1.133889e-09\n[1] 1.133888e-09\n[1] 1.133845e-09\n[1] 1.133889e-09\n[1] 1.133889e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.133869e-0",
        "9\n[1] 1.133892e-09\n[1] 1.133887e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.133892e-09\n[1] 1.13389e-09\n[1] 1.133888e-09\n[1] 1.133889e-09\n[1] 1.133891e-09\n[1] 1.13389e-09\n[1] 1.133891e-09\n[1] 1.133889e-09\n[1] 1.133887e-09\n[1] 1.13389e-09\n[1] 1.133889e-09\n[1] 1.133888e-09\n[1] 1.133845e-09\n[1] 1.133889e-09\n[1] 1.133889e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.13389e-09\n[1] 1.163021e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\niter = 2\nGCV: 2016.28789552675  ||   llk = 2",
        "030.51845732078\nlambda = 0.038344176130743\t 1.62192934054596\n\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163502e-09\n[1] 1.163525e-09\n[1] 1.163521e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163526e-09\n[1] 1.163524e-09\n[1] 1.163522e-09\n[1] 1.163523e-09\n[1] 1.163525e-09\n[1] 1.163524e-09\n[1] 1.163525e-09\n[1] 1.163522e-09\n[1] 1.163521e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163522e-09\n[1] 1.163477e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.16",
        "3502e-09\n[1] 1.163525e-09\n[1] 1.163521e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163526e-09\n[1] 1.163524e-09\n[1] 1.163522e-09\n[1] 1.163523e-09\n[1] 1.163525e-09\n[1] 1.163524e-09\n[1] 1.163525e-09\n[1] 1.163522e-09\n[1] 1.163521e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163522e-09\n[1] 1.163477e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.163523e-09\n[1] 1.149112e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\niter = 2\nGCV: 2016.48952621",
        "968  ||   llk = 2030.6015039482\nlambda = 0.039344176130743\t 1.62292934054596\n\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149222e-09\n[1] 1.149246e-09\n[1] 1.149241e-09\n[1] 1.149244e-09\n[1] 1.149244e-09\n[1] 1.149243e-09\n[1] 1.149246e-09\n[1] 1.149244e-09\n[1] 1.149242e-09\n[1] 1.149243e-09\n[1] 1.149245e-09\n[1] 1.149244e-09\n[1] 1.149245e-09\n[1] 1.149242e-09\n[1] 1.149241e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149242e-09\n[1] 1.149198e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149",
        "243e-09\n[1] 1.149222e-09\n[1] 1.149246e-09\n[1] 1.149241e-09\n[1] 1.149244e-09\n[1] 1.149244e-09\n[1] 1.149243e-09\n[1] 1.149246e-09\n[1] 1.149244e-09\n[1] 1.149242e-09\n[1] 1.149243e-09\n[1] 1.149245e-09\n[1] 1.149244e-09\n[1] 1.149245e-09\n[1] 1.149242e-09\n[1] 1.149241e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149242e-09\n[1] 1.149198e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.149243e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\niter = 1\nGCV: 2016.384555563",
        "76  ||   llk = 2030.49979666159\nlambda = 0.039344176130743\t 1.62092934054596\n\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147707e-09\n[1] 1.14773e-09\n[1] 1.147725e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.14773e-09\n[1] 1.147728e-09\n[1] 1.147726e-09\n[1] 1.147727e-09\n[1] 1.147729e-09\n[1] 1.147729e-09\n[1] 1.147729e-09\n[1] 1.147727e-09\n[1] 1.147725e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147727e-09\n[1] 1.147682e-09\n[1] 1.147727e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.14772",
        "8e-09\n[1] 1.147707e-09\n[1] 1.14773e-09\n[1] 1.147725e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.14773e-09\n[1] 1.147728e-09\n[1] 1.147726e-09\n[1] 1.147727e-09\n[1] 1.147729e-09\n[1] 1.147729e-09\n[1] 1.147729e-09\n[1] 1.147727e-09\n[1] 1.147725e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147727e-09\n[1] 1.147682e-09\n[1] 1.147727e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 1.147728e-09\n[1] 6.584837e-12\n[1] 3.894922e-10\n[1] 1.431639e-10\n[1] 3.117656e-10\n[1] 4.027309e-1",
        "0\n[1] 4.335552e-10\n[1] 4.379815e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\niter = 7\nGCV: 1769.10623267857  ||   llk = 1812.54649378737\nlambda = 0.005\t 0.005\n\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380293e-10\n[1] 4.380416e-10\n[1] 4.380388e-10\n[1] 4.380404e-10\n[1] 4.380404e-10\n[1] 4.380403e-10\n[1] 4.380416e-10\n[1] 4.380456e-10\n[1] 4.380398e-10\n[1] 4.38039e-10\n[1] 4.380411e-10\n[1] 4.380419e-10\n[1] 4.38041e-10\n[1] 4.38033e-10\n[1] 4.380388e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380399e-10\n[1] 4",
        ".380229e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380293e-10\n[1] 4.380416e-10\n[1] 4.380388e-10\n[1] 4.380404e-10\n[1] 4.380404e-10\n[1] 4.380403e-10\n[1] 4.380416e-10\n[1] 4.380456e-10\n[1] 4.380398e-10\n[1] 4.38039e-10\n[1] 4.380411e-10\n[1] 4.380419e-10\n[1] 4.38041e-10\n[1] 4.38033e-10\n[1] 4.380388e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380399e-10\n[1] 4.380229e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\n[1] 4.3804",
        "03e-10\n[1] 4.002405e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\niter = 2\nGCV: 1770.00800702675  ||   llk = 1812.62669187915\nlambda = 0.006\t 0.005\n\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020257e-10\n[1] 4.020373e-10\n[1] 4.020347e-10\n[1] 4.020362e-10\n[1] 4.020362e-10\n[1] 4.020361e-10\n[1] 4.020373e-10\n[1] 4.020411e-10\n[1] 4.020357e-10\n[1] 4.020349e-10\n[1] 4.020369e-10\n[1] 4.020376e-10\n[1] 4.020368e-10\n[1] 4.020292e-10\n[1] 4.020346e-10\n[1] 4.020361e-10\n[1] 4.02036e-10\n[1] 4.020357e-10\n[1] 4.020202e-1",
        "0\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020257e-10\n[1] 4.020373e-10\n[1] 4.020347e-10\n[1] 4.020362e-10\n[1] 4.020362e-10\n[1] 4.020361e-10\n[1] 4.020373e-10\n[1] 4.020411e-10\n[1] 4.020357e-10\n[1] 4.020349e-10\n[1] 4.020369e-10\n[1] 4.020376e-10\n[1] 4.020368e-10\n[1] 4.020292e-10\n[1] 4.020346e-10\n[1] 4.020361e-10\n[1] 4.02036e-10\n[1] 4.020357e-10\n[1] 4.020202e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[1] 4.020361e-10\n[",
        "1] 4.361651e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\niter = 2\nGCV: 1769.1062310325  ||   llk = 1812.54649378773\nlambda = 0.005\t 0.005\n\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380097e-10\n[1] 4.38022e-10\n[1] 4.380192e-10\n[1] 4.380208e-10\n[1] 4.380208e-10\n[1] 4.380207e-10\n[1] 4.38022e-10\n[1] 4.38026e-10\n[1] 4.380203e-10\n[1] 4.380194e-10\n[1] 4.380215e-10\n[1] 4.380223e-10\n[1] 4.380214e-10\n[1] 4.380134e-10\n[1] 4.380192e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380203e-10\n[1] 4.380033e-10\n[1] 4.380",
        "207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380097e-10\n[1] 4.38022e-10\n[1] 4.380192e-10\n[1] 4.380208e-10\n[1] 4.380208e-10\n[1] 4.380207e-10\n[1] 4.38022e-10\n[1] 4.38026e-10\n[1] 4.380203e-10\n[1] 4.380194e-10\n[1] 4.380215e-10\n[1] 4.380223e-10\n[1] 4.380214e-10\n[1] 4.380134e-10\n[1] 4.380192e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380203e-10\n[1] 4.380033e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.380207e-10\n[1] 4.358693e-",
        "10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\niter = 2\nGCV: 1770.32414981916  ||   llk = 1813.05132450694\nlambda = 0.005\t 0.006\n\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.358946e-10\n[1] 4.359068e-10\n[1] 4.359041e-10\n[1] 4.359057e-10\n[1] 4.359057e-10\n[1] 4.359056e-10\n[1] 4.359068e-10\n[1] 4.359108e-10\n[1] 4.359051e-10\n[1] 4.359043e-10\n[1] 4.359064e-10\n[1] 4.359071e-10\n[1] 4.359063e-10\n[1] 4.358984e-10\n[1] 4.359041e-10\n[1] 4.359056e-10\n[1] 4.359055e-10\n[1] 4.359052e-10\n[1] 4.358882e-10\n[1] 4.359056e-10\n[",
        "1] 4.359055e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.358946e-10\n[1] 4.359068e-10\n[1] 4.359041e-10\n[1] 4.359057e-10\n[1] 4.359057e-10\n[1] 4.359056e-10\n[1] 4.359068e-10\n[1] 4.359108e-10\n[1] 4.359051e-10\n[1] 4.359043e-10\n[1] 4.359064e-10\n[1] 4.359071e-10\n[1] 4.359063e-10\n[1] 4.358984e-10\n[1] 4.359041e-10\n[1] 4.359056e-10\n[1] 4.359055e-10\n[1] 4.359052e-10\n[1] 4.358882e-10\n[1] 4.359056e-10\n[1] 4.359055e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.359056e-10\n[1] 4.380034e-10\n[1]",
        " 4.380403e-10\n[1] 4.380403e-10\n[1] 4.380403e-10\niter = 2\nGCV: 1769.10623267829  ||   llk = 1812.54649378737\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -2.02167430  0.94641574  0.01527766  0.06217005  0.84118374\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p",
        "+1))])~dat$x1, ylim= c(-1,1.5))\n",
        "Errore in fit2$smooth$xt$si$X[, -(1:(p + 1))] %*% (f2$alpha[-(1:(p + 1))]) : \n  gli argomenti non sono compatibili\n",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma){\n+   # generate from a weibull using the parametrization in the draft\n+   .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883736\n[1] 0.0007883792\n[1] 0.00078838\n[1] 0.0007883798\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883795\n[1] 0.0007883798\n[1] 0.0007883802\n[1] 0.00078838\n[1] 0.0007883797\n[1] 0.00078",
        "838\n[1] 0.0007883802\n[1] 0.0007883801\n[1] 0.0007883803\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883796\n[1] 0.0007883762\n[1] 0.0007883782\n[1] 0.0007883796\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883736\n[1] 0.0007883792\n[1] 0.00078838\n[1] 0.0007883798\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883795\n[1] 0.0007883798\n[1] 0.0007883802\n[1] 0.00078838\n[1] 0.0007883797\n[1] 0.00078838\n[1] 0.0007883802\n[1] 0.0007883801\n[1] 0.0007883803\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883796\n[1] ",
        "0.0007883762\n[1] 0.0007883782\n[1] 0.0007883796\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 0.0007883799\n[1] 2.246427e-06\n[1] 5.744851e-19\n[1] 6.315873e-22\n[1] 8.496383e-21\n[1] 7.455699e-19\n[1] 2.117623e-16\n[1] 1.289051e-14\n[1] 9.527668e-14\n[1] 5.938785e-13\n[1] 1.404485e-12\n[1] 4.845606e-12\n[1] 7.910375e-12\n[1] 1.369892e-11\n[1] 1.585195e-11\n[1] 1.632918e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\niter = 16\nGCV: 2003.45890795036  ||   llk = 2014.87478895068\nlambda = 0.060509990454503\t 2.",
        "37194977380199\n\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633597e-11\n[1] 1.633669e-11\n[1] 1.633652e-11\n[1] 1.633663e-11\n[1] 1.633661e-11\n[1] 1.633662e-11\n[1] 1.633671e-11\n[1] 1.633666e-11\n[1] 1.633658e-11\n[1] 1.633659e-11\n[1] 1.633668e-11\n[1] 1.63366e-11\n[1] 1.633656e-11\n[1] 1.633658e-11\n[1] 1.633652e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633651e-11\n[1] 1.633605e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633597e-11\n[1] 1.633669e-11\n[1] 1.633652e-11\n[1] ",
        "1.633663e-11\n[1] 1.633661e-11\n[1] 1.633662e-11\n[1] 1.633671e-11\n[1] 1.633666e-11\n[1] 1.633658e-11\n[1] 1.633659e-11\n[1] 1.633668e-11\n[1] 1.63366e-11\n[1] 1.633656e-11\n[1] 1.633658e-11\n[1] 1.633652e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633651e-11\n[1] 1.633605e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.633662e-11\n[1] 1.624194e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\niter = 2\nGCV: 2003.55912531367  ||   llk = 2014.90042142994\nlambda = 0.0615",
        "09990454503\t 2.37194977380199\n\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624122e-11\n[1] 1.624194e-11\n[1] 1.624177e-11\n[1] 1.624188e-11\n[1] 1.624185e-11\n[1] 1.624187e-11\n[1] 1.624196e-11\n[1] 1.624191e-11\n[1] 1.624183e-11\n[1] 1.624183e-11\n[1] 1.624192e-11\n[1] 1.624185e-11\n[1] 1.62418e-11\n[1] 1.624183e-11\n[1] 1.624177e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624175e-11\n[1] 1.62413e-11\n[1] 1.624186e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624122e-11\n[1] 1.624194e-11\n[1] 1.6",
        "24177e-11\n[1] 1.624188e-11\n[1] 1.624185e-11\n[1] 1.624187e-11\n[1] 1.624196e-11\n[1] 1.624191e-11\n[1] 1.624183e-11\n[1] 1.624183e-11\n[1] 1.624192e-11\n[1] 1.624185e-11\n[1] 1.62418e-11\n[1] 1.624183e-11\n[1] 1.624177e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624175e-11\n[1] 1.62413e-11\n[1] 1.624186e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.624187e-11\n[1] 1.643393e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\niter = 2\nGCV: 2003.35729530652  ||   llk = 2014.84899623256\nla",
        "mbda = 0.059509990454503\t 2.37194977380199\n\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643299e-11\n[1] 1.643372e-11\n[1] 1.643354e-11\n[1] 1.643365e-11\n[1] 1.643363e-11\n[1] 1.643365e-11\n[1] 1.643374e-11\n[1] 1.643368e-11\n[1] 1.64336e-11\n[1] 1.643361e-11\n[1] 1.64337e-11\n[1] 1.643362e-11\n[1] 1.643358e-11\n[1] 1.64336e-11\n[1] 1.643354e-11\n[1] 1.643365e-11\n[1] 1.643364e-11\n[1] 1.643353e-11\n[1] 1.643307e-11\n[1] 1.643364e-11\n[1] 1.643364e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643299e-11\n[1] 1.643372",
        "e-11\n[1] 1.643354e-11\n[1] 1.643365e-11\n[1] 1.643363e-11\n[1] 1.643365e-11\n[1] 1.643374e-11\n[1] 1.643368e-11\n[1] 1.64336e-11\n[1] 1.643361e-11\n[1] 1.64337e-11\n[1] 1.643362e-11\n[1] 1.643358e-11\n[1] 1.64336e-11\n[1] 1.643354e-11\n[1] 1.643365e-11\n[1] 1.643364e-11\n[1] 1.643353e-11\n[1] 1.643307e-11\n[1] 1.643364e-11\n[1] 1.643364e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.643365e-11\n[1] 1.635684e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\niter = 2\nGCV: 2003.49095680158  ||   llk = 2014.905",
        "71315575\nlambda = 0.060509990454503\t 2.37294977380199\n\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.63561e-11\n[1] 1.635683e-11\n[1] 1.635665e-11\n[1] 1.635676e-11\n[1] 1.635674e-11\n[1] 1.635675e-11\n[1] 1.635684e-11\n[1] 1.635679e-11\n[1] 1.635671e-11\n[1] 1.635672e-11\n[1] 1.635681e-11\n[1] 1.635673e-11\n[1] 1.635669e-11\n[1] 1.635671e-11\n[1] 1.635665e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635664e-11\n[1] 1.635618e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.63561e-11\n",
        "[1] 1.635683e-11\n[1] 1.635665e-11\n[1] 1.635676e-11\n[1] 1.635674e-11\n[1] 1.635675e-11\n[1] 1.635684e-11\n[1] 1.635679e-11\n[1] 1.635671e-11\n[1] 1.635672e-11\n[1] 1.635681e-11\n[1] 1.635673e-11\n[1] 1.635669e-11\n[1] 1.635671e-11\n[1] 1.635665e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635664e-11\n[1] 1.635618e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.635675e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\niter = 1\nGCV: 2003.42684368906  ||   llk = 2014.84385",
        "025745\nlambda = 0.060509990454503\t 2.37094977380199\n\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631586e-11\n[1] 1.631658e-11\n[1] 1.631641e-11\n[1] 1.631652e-11\n[1] 1.63165e-11\n[1] 1.631651e-11\n[1] 1.63166e-11\n[1] 1.631655e-11\n[1] 1.631647e-11\n[1] 1.631648e-11\n[1] 1.631656e-11\n[1] 1.631649e-11\n[1] 1.631645e-11\n[1] 1.631647e-11\n[1] 1.631641e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631639e-11\n[1] 1.631594e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631586e-11\n[1",
        "] 1.631658e-11\n[1] 1.631641e-11\n[1] 1.631652e-11\n[1] 1.63165e-11\n[1] 1.631651e-11\n[1] 1.63166e-11\n[1] 1.631655e-11\n[1] 1.631647e-11\n[1] 1.631648e-11\n[1] 1.631656e-11\n[1] 1.631649e-11\n[1] 1.631645e-11\n[1] 1.631647e-11\n[1] 1.631641e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631639e-11\n[1] 1.631594e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 1.631651e-11\n[1] 3.163405e-12\n[1] 3.688223e-12\n[1] 3.577675e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\niter =",
        " 4\nGCV: 1958.59170088848  ||   llk = 1973.72507927795\nlambda = 0.0370643170136819\t 1.37222466138513\n\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577459e-12\n[1] 3.577651e-12\n[1] 3.577602e-12\n[1] 3.577634e-12\n[1] 3.577627e-12\n[1] 3.577632e-12\n[1] 3.577659e-12\n[1] 3.577644e-12\n[1] 3.57762e-12\n[1] 3.577621e-12\n[1] 3.577647e-12\n[1] 3.577625e-12\n[1] 3.577612e-12\n[1] 3.577618e-12\n[1] 3.577601e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577595e-12\n[1] 3.577511e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] ",
        "3.577631e-12\n[1] 3.577631e-12\n[1] 3.577459e-12\n[1] 3.577651e-12\n[1] 3.577602e-12\n[1] 3.577634e-12\n[1] 3.577627e-12\n[1] 3.577632e-12\n[1] 3.577659e-12\n[1] 3.577644e-12\n[1] 3.57762e-12\n[1] 3.577621e-12\n[1] 3.577647e-12\n[1] 3.577625e-12\n[1] 3.577612e-12\n[1] 3.577618e-12\n[1] 3.577601e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577595e-12\n[1] 3.577511e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.577631e-12\n[1] 3.565548e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.5",
        "65523e-12\niter = 2\nGCV: 1958.74576177634  ||   llk = 1973.75858010989\nlambda = 0.0380643170136819\t 1.37222466138513\n\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565352e-12\n[1] 3.565542e-12\n[1] 3.565494e-12\n[1] 3.565526e-12\n[1] 3.565519e-12\n[1] 3.565524e-12\n[1] 3.565551e-12\n[1] 3.565536e-12\n[1] 3.565512e-12\n[1] 3.565513e-12\n[1] 3.565539e-12\n[1] 3.565517e-12\n[1] 3.565504e-12\n[1] 3.56551e-12\n[1] 3.565493e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565487e-12\n[1] 3.565404e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3",
        ".565523e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565352e-12\n[1] 3.565542e-12\n[1] 3.565494e-12\n[1] 3.565526e-12\n[1] 3.565519e-12\n[1] 3.565524e-12\n[1] 3.565551e-12\n[1] 3.565536e-12\n[1] 3.565512e-12\n[1] 3.565513e-12\n[1] 3.565539e-12\n[1] 3.565517e-12\n[1] 3.565504e-12\n[1] 3.56551e-12\n[1] 3.565493e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565487e-12\n[1] 3.565404e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.565523e-12\n[1] 3.59022e-12\n[1] 3.590126e-12\n[1] 3.590",
        "126e-12\n[1] 3.590126e-12\niter = 2\nGCV: 1958.43402146974  ||   llk = 1973.69125847248\nlambda = 0.0360643170136819\t 1.37222466138513\n\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.589953e-12\n[1] 3.590145e-12\n[1] 3.590097e-12\n[1] 3.590128e-12\n[1] 3.590122e-12\n[1] 3.590126e-12\n[1] 3.590154e-12\n[1] 3.590138e-12\n[1] 3.590114e-12\n[1] 3.590115e-12\n[1] 3.590142e-12\n[1] 3.590119e-12\n[1] 3.590106e-12\n[1] 3.590113e-12\n[1] 3.590095e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.59009e-12\n[1] 3.590005e-12\n[1] 3.590125e-12\n[1] 3.5",
        "90126e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.589953e-12\n[1] 3.590145e-12\n[1] 3.590097e-12\n[1] 3.590128e-12\n[1] 3.590122e-12\n[1] 3.590126e-12\n[1] 3.590154e-12\n[1] 3.590138e-12\n[1] 3.590114e-12\n[1] 3.590115e-12\n[1] 3.590142e-12\n[1] 3.590119e-12\n[1] 3.590106e-12\n[1] 3.590113e-12\n[1] 3.590095e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.59009e-12\n[1] 3.590005e-12\n[1] 3.590125e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.590126e-12\n[1] 3.584889e-12\n[1] 3.5848",
        "65e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\niter = 2\nGCV: 1958.64679141049  ||   llk = 1973.7781259375\nlambda = 0.0370643170136819\t 1.37322466138513\n\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.584692e-12\n[1] 3.584884e-12\n[1] 3.584836e-12\n[1] 3.584867e-12\n[1] 3.584861e-12\n[1] 3.584865e-12\n[1] 3.584893e-12\n[1] 3.584877e-12\n[1] 3.584853e-12\n[1] 3.584854e-12\n[1] 3.584881e-12\n[1] 3.584858e-12\n[1] 3.584845e-12\n[1] 3.584852e-12\n[1] 3.584834e-12\n[1] 3.584865e-12\n[1] 3.584864e-12\n[1] 3.584829e-12\n[1] 3.584745e-12\n[1] 3.58",
        "4864e-12\n[1] 3.584864e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.584692e-12\n[1] 3.584884e-12\n[1] 3.584836e-12\n[1] 3.584867e-12\n[1] 3.584861e-12\n[1] 3.584865e-12\n[1] 3.584893e-12\n[1] 3.584877e-12\n[1] 3.584853e-12\n[1] 3.584854e-12\n[1] 3.584881e-12\n[1] 3.584858e-12\n[1] 3.584845e-12\n[1] 3.584852e-12\n[1] 3.584834e-12\n[1] 3.584865e-12\n[1] 3.584864e-12\n[1] 3.584829e-12\n[1] 3.584745e-12\n[1] 3.584864e-12\n[1] 3.584864e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.584865e-12\n[1] 3.5704",
        "02e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\niter = 1\nGCV: 1958.53657393917  ||   llk = 1973.67199927746\nlambda = 0.0370643170136819\t 1.37122466138513\n\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 3.57023e-12\n[1] 3.570421e-12\n[1] 3.570373e-12\n[1] 3.570404e-12\n[1] 3.570397e-12\n[1] 3.570402e-12\n[1] 3.57043e-12\n[1] 3.570414e-12\n[1] 3.57039e-12\n[1] 3.570391e-12\n[1] 3.570418e-12\n[1] 3.570395e-12\n[1] 3.570382e-12\n[1] 3.570388e-12\n[1] 3.570371e-12\n[1] 3.570402e-12\n[1] 3.570401e-12\n[1] 3.570366e-12\n[1] 3.570282e-12\n[1] 3.5704",
        "01e-12\n[1] 3.570401e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 3.57023e-12\n[1] 3.570421e-12\n[1] 3.570373e-12\n[1] 3.570404e-12\n[1] 3.570397e-12\n[1] 3.570402e-12\n[1] 3.57043e-12\n[1] 3.570414e-12\n[1] 3.57039e-12\n[1] 3.570391e-12\n[1] 3.570418e-12\n[1] 3.570395e-12\n[1] 3.570382e-12\n[1] 3.570388e-12\n[1] 3.570371e-12\n[1] 3.570402e-12\n[1] 3.570401e-12\n[1] 3.570366e-12\n[1] 3.570282e-12\n[1] 3.570401e-12\n[1] 3.570401e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 3.570402e-12\n[1] 1.337664e-1",
        "6\n[1] 1.145112e-13\n[1] 2.813218e-13\n[1] 4.062577e-13\n[1] 4.209075e-13\n[1] 4.203998e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\niter = 6\nGCV: 1789.60443979423  ||   llk = 1833.52076814743\nlambda = 0.005\t 0.005\n\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.20343e-13\n[1] 4.20375e-13\n[1] 4.203671e-13\n[1] 4.203723e-13\n[1] 4.203711e-13\n[1] 4.203719e-13\n[1] 4.203779e-13\n[1] 4.203826e-13\n[1] 4.203699e-13\n[1] 4.203681e-13\n[1] 4.203753e-13\n[1] 4.203697e-13\n[1] 4.20368e-13\n[1] 4.203596e-13\n[1] 4.203656e-13\n[1] 4",
        ".203718e-13\n[1] 4.203718e-13\n[1] 4.203637e-13\n[1] 4.203595e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.20343e-13\n[1] 4.20375e-13\n[1] 4.203671e-13\n[1] 4.203723e-13\n[1] 4.203711e-13\n[1] 4.203719e-13\n[1] 4.203779e-13\n[1] 4.203826e-13\n[1] 4.203699e-13\n[1] 4.203681e-13\n[1] 4.203753e-13\n[1] 4.203697e-13\n[1] 4.20368e-13\n[1] 4.203596e-13\n[1] 4.203656e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203637e-13\n[1] 4.203595e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.2037",
        "18e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.17877e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\niter = 2\nGCV: 1790.49317316619  ||   llk = 1833.58851578001\nlambda = 0.006\t 0.005\n\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.178843e-13\n[1] 4.179161e-13\n[1] 4.179082e-13\n[1] 4.179134e-13\n[1] 4.179122e-13\n[1] 4.17913e-13\n[1] 4.179189e-13\n[1] 4.179236e-13\n[1] 4.17911e-13\n[1] 4.179092e-13\n[1] 4.179164e-13\n[1] 4.179108e-13\n[1] 4.179092e-13\n[1] 4.179008e-13\n[1] 4.179067e-13\n[1] 4.179129e-13\n",
        "[1] 4.179129e-13\n[1] 4.179049e-13\n[1] 4.179007e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.178843e-13\n[1] 4.179161e-13\n[1] 4.179082e-13\n[1] 4.179134e-13\n[1] 4.179122e-13\n[1] 4.17913e-13\n[1] 4.179189e-13\n[1] 4.179236e-13\n[1] 4.17911e-13\n[1] 4.179092e-13\n[1] 4.179164e-13\n[1] 4.179108e-13\n[1] 4.179092e-13\n[1] 4.179008e-13\n[1] 4.179067e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179049e-13\n[1] 4.179007e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] ",
        "4.179129e-13\n[1] 4.179129e-13\n[1] 4.179129e-13\n[1] 4.203347e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\niter = 2\nGCV: 1789.60443848482  ||   llk = 1833.52076814775\nlambda = 0.005\t 0.005\n\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.203422e-13\n[1] 4.203742e-13\n[1] 4.203663e-13\n[1] 4.203715e-13\n[1] 4.203703e-13\n[1] 4.203711e-13\n[1] 4.203771e-13\n[1] 4.203818e-13\n[1] 4.203691e-13\n[1] 4.203673e-13\n[1] 4.203745e-13\n[1] 4.203689e-13\n[1] 4.203672e-13\n[1] 4.203588e-13\n[1] 4.203648e-13\n[1] 4.20371e-13\n[1] 4.20371e-1",
        "3\n[1] 4.203629e-13\n[1] 4.203587e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.203422e-13\n[1] 4.203742e-13\n[1] 4.203663e-13\n[1] 4.203715e-13\n[1] 4.203703e-13\n[1] 4.203711e-13\n[1] 4.203771e-13\n[1] 4.203818e-13\n[1] 4.203691e-13\n[1] 4.203673e-13\n[1] 4.203745e-13\n[1] 4.203689e-13\n[1] 4.203672e-13\n[1] 4.203588e-13\n[1] 4.203648e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.203629e-13\n[1] 4.203587e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371e-13\n[1] 4.20371",
        "e-13\n[1] 4.20371e-13\n[1] 4.185853e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\niter = 2\nGCV: 1790.56945131377  ||   llk = 1833.76920363529\nlambda = 0.005\t 0.006\n\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.185783e-13\n[1] 4.186101e-13\n[1] 4.186022e-13\n[1] 4.186074e-13\n[1] 4.186062e-13\n[1] 4.18607e-13\n[1] 4.186129e-13\n[1] 4.186176e-13\n[1] 4.186051e-13\n[1] 4.186033e-13\n[1] 4.186104e-13\n[1] 4.186049e-13\n[1] 4.186032e-13\n[1] 4.185948e-13\n[1] 4.186008e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.185989e-13\n[",
        "1] 4.185947e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.185783e-13\n[1] 4.186101e-13\n[1] 4.186022e-13\n[1] 4.186074e-13\n[1] 4.186062e-13\n[1] 4.18607e-13\n[1] 4.186129e-13\n[1] 4.186176e-13\n[1] 4.186051e-13\n[1] 4.186033e-13\n[1] 4.186104e-13\n[1] 4.186049e-13\n[1] 4.186032e-13\n[1] 4.185948e-13\n[1] 4.186008e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.185989e-13\n[1] 4.185947e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] 4.186069e-13\n[1] ",
        "4.186069e-13\n[1] 4.203501e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\n[1] 4.203718e-13\niter = 2\nGCV: 1789.60443993357  ||   llk = 1833.52076814743\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.91651684  1.96024658 -0.97492177  0.11035598 -0.06337381\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue)\n\n> plot(fit2$smooth$xt$si$",
        "X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5))\n\n> points(smtrue~dat$x1, col=\"grey\")\n\n> W <- drop(dat$times +lintrue + smtrue)\n\n> plot(W~f2$xba)\n\n> plot(rank(W)/length(W)~ W)\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"grey\")\n\n> plot(f2$s$s~f2$xba, col=\"grey\")\n",
        "> ",
        "curve(pweibull, from = -10, to=10)",
        "Errore in pweibull(x) : \n  argomento \"shape\" assente, senza valore predefinito\n",
        "> ",
        "curve(wrap_rweibull, lambda=1, gamma=1, dist = TRUE, from = -10, to=10)",
        "Errore in wrap_rweibull(x) : \n  argomento \"lambda\" assente, senza valore predefinito\n",
        "> ",
        "curve(function(x) wrap_rweibull(x, lambda=1, gamma=1, dist = TRUE), ",
        "+ ",
        "      from = -10, to=10)",
        "Errore in curve(function(x) wrap_rweibull(x, lambda = 1, gamma = 1, dist = TRUE),  : \n  'expr' non valuterà un oggetto di lunghezza 'n'\n",
        "> ",
        "wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){",
        "+ ",
        "  # generate from a weibull using the parametrization in the draft",
        "+ ",
        "  sc <- lambda^(-1/gamma); sh <- gamma",
        "+ ",
        "  if(dist) return(sapply(n, function(xx) pweibull(xx, scale = sc, shape = sh)))",
        "+ ",
        "  rweibull(n, scale = sc, shape = sh)",
        "+ ",
        "}",
        "> ",
        "curve(function(x) wrap_rweibull(x, lambda=1, gamma=1, dist = TRUE),",
        "+ ",
        "      from = -10, to=10)",
        "Errore in curve(function(x) wrap_rweibull(x, lambda = 1, gamma = 1, dist = TRUE),  : \n  'expr' non valuterà un oggetto di lunghezza 'n'\n",
        "> ",
        "lambda <- 1; gamma<- 1",
        "> ",
        "sc <- lambda^(-1/gamma); sh <- gamma",
        "> ",
        "curve(pweibull, lambda=sc, gamma=sh,",
        "+ ",
        "      from = -10, to=10)",
        "Errore in pweibull(x) : \n  argomento \"shape\" assente, senza valore predefinito\n",
        "> ",
        "curve(pweibull, scale=sc, shape=sh,",
        "+ ",
        "      from = -10, to=10)",
        "Errore in pweibull(x) : \n  argomento \"shape\" assente, senza valore predefinito\n",
        "> ",
        "curve(function(x) pweibull(x, scale=sc, shape=sh),",
        "+ ",
        "      from = -10, to=10)",
        "Errore in curve(function(x) pweibull(x, scale = sc, shape = sh), from = -10,  : \n  'expr' non valuterà un oggetto di lunghezza 'n'\n",
        "> ",
        "curve(function(x) pweibull(x, scale=sc, shape=sh))",
        "Errore in curve(function(x) pweibull(x, scale = sc, shape = sh)) : \n  'expr' non valuterà un oggetto di lunghezza 'n'\n",
        "> ",
        "curve(function(x) qweibull(x, scale=sc, shape=sh))",
        "Errore in curve(function(x) qweibull(x, scale = sc, shape = sh)) : \n  'expr' non valuterà un oggetto di lunghezza 'n'\n",
        "> ",
        "curve(qweibull(1:10, scale=sc, shape=sh))",
        "Errore in curve(qweibull(1:10, scale = sc, shape = sh)) : \n  'expr' dev'essere una funzione, o una chiamata o un'espressione contenente 'x'\n",
        "> ",
        "plot(qweibull(1:10, scale=sc, shape=sh))",
        "Errore in plot.window(...) : i valori di 'ylim' devono essere finiti\nIn aggiunta: Messaggi di avvertimento:\n1: In qweibull(1:10, scale = sc, shape = sh) : Si è prodotto un NaN\n2: In min(x) : nessun argomento non-mancante al minimo; si restituisce Inf\n3: In max(x) :\n  nessun argomento non-mancante al massimo; si restituisce -Inf\n",
        "> ",
        "qweibull(1:10, scale=sc, shape=sh)",
        " [1] Inf NaN NaN NaN NaN NaN NaN NaN NaN NaN\n",
        "Messaggio di avvertimento:\nIn qweibull(1:10, scale = sc, shape = sh) : Si è prodotto un NaN\n",
        "> ",
        "plot(pweibull(1:10, scale=sc, shape=sh))",
        "> ",
        "plot(pweibull(seq(0, max(W), length.out = 1000), scale=sc, shape=sh))",
        "> ",
        "xx <- seq(0, max(W), length.out = 1000)",
        "> ",
        "plot(pweibull(xx, scale=sc, shape=sh))",
        "> ",
        "plot(pweibull(xx, scale=sc, shape=sh)~xx)",
        "> ",
        "xx <- seq(0, max(W), length.out = 1000)",
        "> ",
        "plot(pweibull(xx, scale=sc, shape=sh)~xx)",
        "> ",
        "points(rank(W)/length(W)~ W, col=\"grey\")",
        "> ",
        "points(1-exp(f2$s$s)~f2$xba, col=\"blue\")",
        "> ",
        "points(1-exp(f2$s$s)~f2$xba, col=\"red\")",
        "> ",
        "plot(wrap_rweibull(xx, 1, 1, TRUE)~xx)",
        "> ",
        "plot(f2$f~f2$xba, col=\"grey\")",
        "> ",
        "plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,main = \"ce\")",
        "> ",
        "plot(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, ylim= c(-1,1.5),",
        "+ ",
        "     main = \"smooth part\", col=\"red\")",
        "> ",
        "points(smtrue~dat$x1)",
        "> ",
        "points(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")",
        "> ",
        "plot(aa, pch=20)",
        "> ",
        "plot(aa, pch=20, cex = 1.5)",
        "> ",
        "points(f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)",
        "> ",
        "points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){\n+   # generate from a weibull using the parametrization in .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=10) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 16\nGCV: 2019.71786564458  ||   llk = 2030.5153332592\nlambda = 0.0605816107820855\t 2.29355549170089\n\niter = 2\nGCV: 2019.81184059904  ||   llk = 2030.53442328609\nlambda = 0.0615816107820855\t 2.29355549170089\n\niter = 2\nGCV: ",
        "2019.6225011363  ||   llk = 2030.49609925553\nlambda = 0.0595816107820855\t 2.29355549170089\n\niter = 2\nGCV: 2019.75257309436  ||   llk = 2030.54889235009\nlambda = 0.0605816107820855\t 2.29455549170089\n\niter = 1\nGCV: 2019.68313678372  ||   llk = 2030.48175564645\nlambda = 0.0605816107820855\t 2.29255549170089\n\niter = 4\nGCV: 1968.98142819055  ||   llk = 1983.64623815846\nlambda = 0.0363020047559156\t 1.29385028478677\n\niter = 2\nGCV: 1969.13332654122  ||   llk = 1983.67442972507\nlambda = 0.0373020047559156\t 1.29385028",
        "478677\n\niter = 2\nGCV: 1968.82574684047  ||   llk = 1983.61769702851\nlambda = 0.0353020047559156\t 1.29385028478677\n\niter = 2\nGCV: 1969.04732834115  ||   llk = 1983.71004073655\nlambda = 0.0363020047559156\t 1.29485028478677\n\niter = 1\nGCV: 1968.9154823004  ||   llk = 1983.58238741223\nlambda = 0.0363020047559156\t 1.29285028478677\n\niter = 14\nGCV: 1762.84917717619  ||   llk = 1805.54224812373\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1763.75803172544  ||   llk = 1805.62912051204\nlambda = 0.006\t 0.005\n\niter = 2\nGCV: 176",
        "2.84917616374  ||   llk = 1805.5422481244\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1763.95726307788  ||   llk = 1805.93892102012\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1762.84917718266  ||   llk = 1805.54224812373\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.92209472  1.88783989 -0.86262844  0.02595094  0.10328552\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> par(mfrow = c(2,2))\n\n> plot(aa, p",
        "ch=20, cex = 1.5, main = \"linear coef\")\n\n> points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,\n+      main = \"linear part\")\n\n> plot(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")\n\n> points(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, col=\"red\")\n\n> W <- drop(dat$times +lintrue + smtrue) ##observed noise\n\n> plot(f2$f~f2$xba, col=\"red\")\n\n> xx <- seq(0, max(W), length.out = 1000)\n\n> plot(wrap_rweibull(xx",
        ", 1, 1, TRUE)~xx)\n",
        "Errore in wrap_rweibull(xx, 1, 1, TRUE) : oggetto 'nn' non trovato\n",
        "> ",
        "  if(dist) return(pweibull(n, scale = sc, shape = sh))",
        "Errore in if (dist) return(pweibull(n, scale = sc, shape = sh)) : \n  l'argomento non è interpretabile come logico\n",
        "> ",
        "wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){",
        "+ ",
        "  # generate from a weibull using the parametrization in the draft",
        "+ ",
        "  sc <- lambda^(-1/gamma); sh <- gamma",
        "+ ",
        "  if(dist) return(pweibull(n, scale = sc, shape = sh))",
        "+ ",
        "  rweibull(n, scale = sc, shape = sh)",
        "+ ",
        "}",
        "> ",
        "plot(wrap_rweibull(xx, 1, 1, TRUE)~xx)",
        "> ",
        "points(rank(W)/length(W)~ W, col=\"grey\") # ecdf",
        "> ",
        "points(1-exp(f2$s$s)~f2$xba, col=\"red\") # estimated survival",
        "> ",
        "par(mfrow = c(2,2))",
        "> ",
        "plot(aa, pch=20, cex = 1.5, main = \"linear coef\")",
        "> ",
        "points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)",
        "> ",
        "plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,",
        "+ ",
        "     main = \"linear part\")",
        "> ",
        "plot(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")",
        "> ",
        "points(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, col=\"red\")",
        "> ",
        "> ",
        "W <- drop(dat$times +lintrue + smtrue) ##observed noise",
        "> ",
        "> ",
        "xx <- seq(0, max(W), length.out = 1000)",
        "> ",
        "plot(wrap_rweibull(xx, 1, 1, TRUE)~xx)",
        "> ",
        "points(rank(W)/length(W)~ W, col=\"grey\") # ecdf",
        "> ",
        "points(1-exp(f2$s$s)~f2$xba, col=\"red\") # estimated survival",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){\n+   # generate from a weibull using the parametrization in .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(",
        "n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n> times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, .... [TRUNCATED] \n\n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times",
        "), breaks = 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=40) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 16\nGCV: 1999.11318704181  ||   llk = 1980.54470352739\nlambda = 0.0606881990548565\t 0.174512117941795\n\niter = 2\nGCV: 1999.2189993437  ||   llk = 1980.5774783392\nlambda = 0.0616881990548565\t 0.174512117941795\n\niter = 2\nGCV:",
        " 1999.00593985592  ||   llk = 1980.51170253214\nlambda = 0.0596881990548565\t 0.174512117941795\n\niter = 2\nGCV: 1999.25515308675  ||   llk = 1980.62207938018\nlambda = 0.0606881990548565\t 0.175512117941795\n\niter = 2\nGCV: 1998.97074606345  ||   llk = 1980.46723462315\nlambda = 0.0606881990548565\t 0.173512117941795\n\niter = 6\nGCV: 1924.29860432955  ||   llk = 1960.76539905409\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1925.19840282286  ||   llk = 1960.84894553973\nlambda = 0.006\t 0.005\n\niter = 2\nGCV: 1924.29859011969  || ",
        "  llk = 1960.76539907512\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1927.13292068219  ||   llk = 1961.10792292107\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1924.29860607682  ||   llk = 1960.76539905394\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -3.97030009  2.05042082 -0.83786521 -0.05809562  0.08054953\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> par(mfrow = c(2,2))\n\n> plot(aa, pch=20, cex = 1.5,",
        " main = \"linear coef\")\n\n> points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,\n+      main = \"linear part\")\n\n> plot(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")\n\n> points(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, col=\"red\")\n\n> W <- drop(dat$times +lintrue + smtrue) ##observed noise\n\n> xx <- seq(0, max(W), length.out = 1000)\n\n> plot(wrap_rweibull(xx, 1, 1, TRUE)~xx)\n\n> points(rank(W)/length(W)~ W,",
        " col=\"grey\") # ecdf\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"red\") # estimated survival\n",
        "> ",
        "xx <- seq(0, max(W), length.out = 1000)",
        "> ",
        "pp <- rbinom(1000,1,0.5)",
        "> ",
        "plot(pp*wrap_rweibull(xx, 1,1, TRUE) + (1-pp)*wrap_rweibull(xx, 6,1, TRUE)~xx)",
        "> ",
        "source(\"~/Dropbox/dottorato pd/Accelerated_failure_time/code/sims_aft.R\", echo=TRUE)",
        "\n> rm(list = ls())\n\n> library(devtools)\n\n> load_all()\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\n> # load_all(\"./aftNested\")\n> \n> wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){\n+   # generate from a weibull using the parametrization in .... [TRUNCATED] \n\n> n <- 2000\n\n> p <- 5\n\n> qcens <- .97\n\n> aa <- c(4,-2,1,0,0)\n\n> X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)\n\n> x1 <- 2*rbeta(n, 0.5,2)\n\n> pp <- rbinom(n,1,0.5)\n\n> times <- X[,1:p]%*%aa + sin(5*x1) + pp*wrap_rweibull(n,",
        " 1,1) + (1-pp)*wrap_rweibull(n, 6,1)\n\n> # times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, 1,1)\n> \n> par(mfrow = c(2,2))\n\n> plot(density(times-(X[,1:p]%*%aa + sin(x1))))\n\n> plot(times~X[,1])\n\n> plot(times~X[,p])\n\n> plot(times~x1)\n\n> dat <- data.frame(times = times,\n+                   x1 = x1,\n+                   x2 = X)\n\n> # add censoring ####\n> C <- quantile(dat$times, qcens)\n\n> dat$c <- as.numeric(dat$times<C)\n\n> dat$times[dat$c==0] <- C\n\n> hist(dat$times, breaks = 50)\n\n> hist(exp(dat$times), breaks ",
        "= 50)\n\n> sample_val <- sample.int(n, n/4)\n\n> validation <- dat[sample_val,]\n\n> dat <- dat[-sample_val,]\n\n> fit2 <- aft_nl(times ~ s(x1, k=40) + x2.1 + x2.2 + x2.3+x2.4+x2.5,outer.args = list(k=10),\n+                data = dat, val = validation, #unif=FALS .... [TRUNCATED] \niter = 15\nGCV: 1342.06816482902  ||   llk = 1323.85444063644\nlambda = 0.0605883439510378\t 0.129539793904555\n\niter = 2\nGCV: 1342.19133607451  ||   llk = 1323.90517059607\nlambda = 0.0615883439510378\t 0.129539793904555\n\niter = 2\nGCV: 1341.94",
        "349670379  ||   llk = 1323.8034327283\nlambda = 0.0595883439510378\t 0.129539793904555\n\niter = 2\nGCV: 1342.41816527157  ||   llk = 1324.11607119278\nlambda = 0.0605883439510378\t 0.130539793904555\n\niter = 2\nGCV: 1341.71711394391  ||   llk = 1323.59247093508\nlambda = 0.0605883439510378\t 0.128539793904555\n\niter = 5\nGCV: 1249.31270178381  ||   llk = 1282.95658284524\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1250.2414736241  ||   llk = 1283.06471424215\nlambda = 0.006\t 0.005\n\niter = 2\nGCV: 1249.3127005885  ||   llk = 128",
        "2.95658284538\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1252.31219134111  ||   llk = 1283.45231939021\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1249.31270314822  ||   llk = 1282.95658284519\nlambda = 0.005\t 0.005\n\n\n> f2 <- get.si(fit2$smooth, fit2$coefficients)\n\n> f2$alpha[1:p+1]\n[1] -4.01887159  1.98915352 -0.92951776  0.04094213 -0.01188862\n\n> aa\n[1]  4 -2  1  0  0\n\n> lintrue <- -as.matrix(dat[,3:7])%*%aa\n\n> smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))\n\n> par(mfrow = c(2,2))\n\n> plot(aa, pch=20, cex = 1.5, main = \"li",
        "near coef\")\n\n> points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)\n\n> plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,\n+      main = \"linear part\")\n\n> plot(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")\n\n> points(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, col=\"red\")\n\n> W <- drop(dat$times +lintrue + smtrue) ##observed noise\n\n> xx <- seq(0, max(W), length.out = 1000)\n\n> pp <- rbinom(1000,1,0.5)\n\n> plot(pp*wrap_rweibull(xx, 1,1, TRUE) + (1-pp)*wrap_rw",
        "eibull(xx, 6,1, TRUE)~xx)\n\n> points(rank(W)/length(W)~ W, col=\"grey\") # ecdf\n\n> points(1-exp(f2$s$s)~f2$xba, col=\"red\") # estimated survival\n",
        "> ",
        "rm(list = ls())",
        "> ",
        "library(devtools)",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n",
        "> ",
        "# load_all(\"./aftNested\")",
        "> ",
        "> ",
        "wrap_rweibull <- function(n, lambda, gamma, dist = FALSE){",
        "+ ",
        "  # generate from a weibull using the parametrization in the draft",
        "+ ",
        "  sc <- lambda^(-1/gamma); sh <- gamma",
        "+ ",
        "  if(dist) return(pweibull(n, scale = sc, shape = sh))",
        "+ ",
        "  rweibull(n, scale = sc, shape = sh)",
        "+ ",
        "}",
        "> ",
        "> ",
        "n <- 2000",
        "> ",
        "p <- 5",
        "> ",
        "qcens <- .97",
        "> ",
        "> ",
        "aa <- c(4,-2,1,0,0)",
        "> ",
        "X <- matrix(rbeta(n*(p), 0.5,2), ncol = p)",
        "> ",
        "x1 <- 2*rbeta(n, 0.5,2)",
        "> ",
        "pp <- rbinom(n,1,0.5)",
        "> ",
        "times <- X[,1:p]%*%aa + sin(5*x1)+ pp + pp*wrap_rweibull(n, 1,1) + (1-pp)*wrap_rweibull(n, 6,1)",
        "> ",
        "# times <- X[,1:p]%*%aa + sin(5*x1) + wrap_rweibull(n, 1,1)",
        "> ",
        "> ",
        "par(mfrow = c(2,2))",
        "> ",
        "plot(density(times-(X[,1:p]%*%aa + sin(x1))))",
        "> ",
        "plot(times~X[,1])",
        "> ",
        "plot(times~X[,p])",
        "> ",
        "plot(times~x1)",
        "> ",
        "> ",
        "dat <- data.frame(times = times,",
        "+ ",
        "                  x1 = x1,",
        "+ ",
        "                  x2 = X,",
        "+ ",
        "                  x3 = pp)",
        "> ",
        "# add censoring ####",
        "> ",
        "C <- quantile(dat$times, qcens)",
        "> ",
        "dat$c <- as.numeric(dat$times<C)",
        "> ",
        "dat$times[dat$c==0] <- C",
        "> ",
        "hist(dat$times, breaks = 50)",
        "> ",
        "hist(exp(dat$times), breaks = 50)",
        "> ",
        "sample_val <- sample.int(n, n/4)",
        "> ",
        "validation <- dat[sample_val,]",
        "> ",
        "dat <- dat[-sample_val,]",
        "> ",
        "fit2 <- aft_nl(times ~ s(x1, k=40) + x2.1 + x2.2 + x2.3+x2.4+x2.5 + x3,",
        "+ ",
        "               outer.args = list(k=10),",
        "+ ",
        "               data = dat, val = validation, #unif=FALSE,",
        "+ ",
        "               censored = \"c\", trace = TRUE, ps = TRUE)",
        "iter = 17\nGCV: 1147.52215064396  ||   llk = 1129.65780249139\nlambda = 0.0607789332540348\t 0.153027639383805\n\niter = 2\nGCV: 1147.63603385123  ||   llk = 1129.69751245862\nlambda = 0.0617789332540348\t 0.153027639383805\n\niter = 2\nGCV: 1147.40680046642  ||   llk = 1129.61784977861\nlambda = 0.0597789332540348\t 0.153027639383805\n\niter = 2\nGCV: 1147.87809716429  ||   llk = 1129.9388231726\nlambda = 0.0607789332540348\t 0.154027639383805\n\niter = 2\nGCV: 1147.16536877567  ||   llk = 1129.37645542826\nlambda = 0.060778933",
        "2540348\t 0.152027639383805\n\niter = 6\nGCV: 1041.70547225204  ||   llk = 1078.54248575668\nlambda = 0.005\t 0.005\n\niter = 3\nGCV: 1042.62213217979  ||   llk = 1078.63533393327\nlambda = 0.006\t 0.005\n\niter = 3\nGCV: 1041.70547225685  ||   llk = 1078.54248575668\nlambda = 0.005\t 0.005\n\niter = 2\nGCV: 1044.84430997921  ||   llk = 1079.12023126725\nlambda = 0.005\t 0.006\n\niter = 2\nGCV: 1041.70547225293  ||   llk = 1078.54248575668\nlambda = 0.005\t 0.005\n\n",
        "> ",
        "f2 <- get.si(fit2$smooth, fit2$coefficients)",
        "> ",
        "f2$alpha[1:p+1]",
        "[1] -3.9733192399  1.9990156393 -1.0320838721  0.0654111143  0.0005414513\n",
        "> ",
        "aa",
        "[1]  4 -2  1  0  0\n",
        "> ",
        "lintrue <- -as.matrix(dat[,3:7])%*%aa",
        "> ",
        "smtrue <- -sin(5*dat$x1)+mean(sin(5*dat$x1))",
        "> ",
        "par(mfrow = c(2,2))",
        "> ",
        "plot(aa, pch=20, cex = 1.5, main = \"linear coef\")",
        "> ",
        "points(-f2$alpha[1:p+1], col=\"red\", cex = 1.5, pch = 20)",
        "> ",
        "plot(as.matrix(fit2$smooth$xt$si$X[, 2:(p+1)])%*%f2$alpha[1:p+1]~lintrue,",
        "+ ",
        "     main = \"linear part\")",
        "> ",
        "plot(smtrue~dat$x1, ylim= c(-1,1.5),main = \"smooth part\")",
        "> ",
        "points(fit2$smooth$xt$si$X[,-(1:(p+1))]%*%(f2$alpha[-(1:(p+1))])~dat$x1, col=\"red\")",
        "> ",
        "W <- drop(dat$times +lintrue + smtrue) ##observed noise",
        "> ",
        "xx <- seq(0, max(W), length.out = 1000)",
        "> ",
        "pp <- rbinom(1000,1,0.5)",
        "> ",
        "plot(pp*wrap_rweibull(xx, 1,1, TRUE) + (1-pp)*wrap_rweibull(xx, 6,1, TRUE)~xx)",
        "> ",
        "points(rank(W)/length(W)~ W, col=\"grey\") # ecdf",
        "> ",
        "points(1-exp(f2$s$s)~f2$xba, col=\"red\") # estimated survival",
        "> ",
        "load_all()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34maftNested\u001B[38;5;232m\u001B[39m\n\nRestarting R session...\n\n"
    ]
}